{"version":3,"sources":["Xsignup.js"],"names":["XController","insert","req","res","body","Name","Marks","Level","status","send","classStuff","insert_into_DB","datas","message","retrieve","findAll_into_DB","retrieveOne","findOne_into_DB","parseInt","params","id","length","update","datas_id","retrieve_this_student","data_to_insert","student_name","student_marks","student_level","update_into_DB","delete_into_DB"],"mappings":"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","sourceRoot":"C:\\Users\\Positivo_Computer\\Desktop\\learn-Testing-Travis-Coveralls-Maintainability\\server\\api\\controllers","sourcesContent":["import classStuff from '../models/class'\r\n\r\nconst XController = {\r\n async insert(req, res) {\r\n    if (!req.body.Name || !req.body.Marks || !req.body.Level) {\r\n      return res.status(400).send({'message': 'All fields are required'})\r\n    }\r\n\r\n    const datas = await classStuff.insert_into_DB(req.body);\r\n    if (datas) {\r\n      return res.status(201).send({message : `Hy You added Successfully This student `, datas});\r\n    }\r\n  },\r\n async retrieve(req, res) {\r\n    const datas = await classStuff.findAll_into_DB()\r\n    if (datas) {\r\n      return res.status(200).send({message : `Hy You Successfully retrieved all student `, datas});\r\n    }\r\n  },\r\n async retrieveOne(req, res) {\r\n    const datas = await classStuff.findOne_into_DB( parseInt(req.params.id));\r\n    // console.log(datas[0].id);\r\n    if (datas.length === 0) {\r\n      return res.status(404).send({message: 'This student not found'});\r\n    }\r\n    return res.status(200).send({message: 'This student Successfully', datas});\r\n  }, \r\n async update(req, res) {\r\n    const datas_id = await classStuff.findOne_into_DB( parseInt(req.params.id));\r\n     if (datas_id.length === 0) {\r\n       return res.status(404).send({message: 'This student not found'});\r\n     }\r\n    const retrieve_this_student = await classStuff.findOne_into_DB( parseInt(req.params.id));\r\n    // console.log(retrieve_this_student);\r\n    // console.log(retrieve_this_student[0].student_name);\r\n    const data_to_insert = {\r\n      Name:req.body.Name || retrieve_this_student[0].student_name, \r\n      Marks:req.body.Marks || retrieve_this_student[0].student_marks, \r\n      Level:req.body.Level || retrieve_this_student[0].student_level}\r\n    const datas = await classStuff.update_into_DB(data_to_insert, parseInt(req.params.id));\r\n    return res.status(200).send({message: 'This student updated Successfully', datas});\r\n   },\r\n async delete(req, res) {\r\n    const datas_id = await classStuff.findOne_into_DB( parseInt(req.params.id));\r\n     if (datas_id.length === 0) {\r\n       return res.status(404).send({message: 'This student not found'});\r\n     }\r\n\r\n    const datas = await classStuff.delete_into_DB( datas_id);\r\n    return res.status(200).send({message: 'This student are Successfully deleted ', datas});\r\n   }\r\n}\r\nexport default XController;"]}