{"version":3,"sources":["Xsignup.js"],"names":["XController","inserts","req","res","body","Name","Marks","Level","status","send","datas","classStuff","create","message","insert","insert_into_DB","retrieves","students","findAll","retrieve","findAll_into_DB","retrieveOnes","student","findOne","parseInt","params","id","retrieveOne","findOne_into_DB","length","updates","updatedclassStuff","update","datas_id","retrieve_this_student","data_to_insert","student_name","student_marks","student_level","update_into_DB","deletes","stud","delete_into_DB","module","exports"],"mappings":"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","sourceRoot":"C:\\Users\\Positivo_Computer\\Desktop\\learn-Testing-Travis-Coveralls-Maintainability\\server\\api\\controllers","sourcesContent":["import classStuff from '../models/class'\r\n\r\nconst XController = {\r\n  inserts (req, res) {\r\n    if (!req.body.Name || !req.body.Marks || !req.body.Level) {\r\n      return res.status(400).send({'message': 'All fields are required'})\r\n    }\r\n\r\n    const datas = classStuff.create(req.body);\r\n    if (datas) {\r\n      return res.status(201).send({message : `Hy You added Successfully `, datas});\r\n    }\r\n    else{\r\n      return res.status(400).send({message : `Hy something Wrong Occured `});\r\n    }\r\n\r\n  },\r\n  async insert(req, res) {\r\n    if (!req.body.Name || !req.body.Marks || !req.body.Level) {\r\n      return res.status(400).send({'message': 'All fields are required'})\r\n    }\r\n\r\n    const datas = await classStuff.insert_into_DB(req.body);\r\n    if (datas) {\r\n      return res.status(201).send({message : `Hy You added Successfully `, datas});\r\n    }\r\n    else{\r\n      return res.status(400).send({message : `Hy something Wrong Occured `});\r\n    }\r\n\r\n  },\r\n  retrieves (req, res) {\r\n    const students = classStuff.findAll();\r\n    return res.status(200).send(students);\r\n  },\r\n  async retrieve(req, res) {\r\n    const datas = await classStuff.findAll_into_DB()\r\n    if (datas) {\r\n      return res.status(200).send(datas);\r\n    }\r\n  },\r\n  retrieveOnes : (req, res) => {\r\n    const student = classStuff.findOne( parseInt(req.params.id));\r\n\r\n    if (!student) {\r\n      return res.status(404).send({'message': 'student not found'});\r\n    }\r\n    return res.status(200).send(student);\r\n  },\r\n  async retrieveOne(req, res) {\r\n    const datas = await classStuff.findOne_into_DB( parseInt(req.params.id));\r\n    // console.log(datas[0].id);\r\n    if (datas.length === 0) {\r\n      return res.status(404).send({message: 'student not found'});\r\n    }\r\n    return res.status(200).send({message: 'student Successfully', datas});\r\n  }, \r\n  updates : (req, res) => {\r\n    const student = classStuff.findOne(parseInt(req.params.id));\r\n    if (!student) {\r\n      return res.status(404).send({'message': 'student not found'});\r\n    }\r\n    const updatedclassStuff = classStuff.update(parseInt(req.params.id), req.body)\r\n    return res.status(200).send(updatedclassStuff);\r\n  },\r\n  async update(req, res) {\r\n    const datas_id = await classStuff.findOne_into_DB( parseInt(req.params.id));\r\n     if (datas_id.length === 0) {\r\n       return res.status(404).send({message: 'student not found'});\r\n     }\r\n    const retrieve_this_student = await classStuff.findOne_into_DB( parseInt(req.params.id));\r\n    // console.log(retrieve_this_student);\r\n    // console.log(retrieve_this_student[0].student_name);\r\n    const data_to_insert = {\r\n      Name:req.body.Name || retrieve_this_student[0].student_name, \r\n      Marks:req.body.Marks || retrieve_this_student[0].student_marks, \r\n      Level:req.body.Level || retrieve_this_student[0].student_level}\r\n    const datas = await classStuff.update_into_DB(data_to_insert, parseInt(req.params.id));\r\n    return res.status(200).send({message: 'reflection updated Successfully', datas});\r\n   },\r\n  deletes : (req, res) => {\r\n    const student = classStuff.findOne(parseInt(req.params.id));\r\n    if (!student) {\r\n      return res.status(404).send({'message': 'student not found'});\r\n    }\r\n    const stud = classStuff.delete(parseInt(req.params.id));\r\n    return res.status(204).send(stud);\r\n  },\r\n  async delete(req, res) {\r\n    const datas_id = await classStuff.findOne_into_DB( parseInt(req.params.id));\r\n     if (datas_id.length === 0) {\r\n       return res.status(404).send({message: 'student not found'});\r\n     }\r\n\r\n    const datas = await classStuff.delete_into_DB( parseInt(req.params.id));\r\n    return res.status(200).send({message: 'Those student are Successfully deleted ', datas});\r\n   }\r\n}\r\nmodule.exports = XController;"]}