{"version":3,"sources":["updateLocation.js"],"names":["dotenv","config","updateSingleRecords","updateOneRecordsLocation","req","res","receive_token_from_header","headers","authorization","decoded_token_in_the_way_to_obtain_user_details","jwt","verify","process","env","SECRET_KEY","body","latitude","longitude","recordId","parseInt","params","redflagid","impData","fetchOneRecord","data","status","json","message","username","length","userid","id","readyDatas","updateLocation","updatedRecord","updateRecord"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEAA,mBAAOC,MAAP;;AACA,IAAMC,mBAAmB,GAAG;AACpBC,EAAAA,wBADoB;AAAA;AAAA;AAAA,kDACKC,GADL,EACUC,GADV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAElBC,cAAAA,yBAFkB,GAEUF,GAAG,CAACG,OAAJ,CAAYC,aAFtB;AAGlBC,cAAAA,+CAHkB,GAGgCC,yBAAIC,MAAJ,CAAWL,yBAAX,EAAsCM,OAAO,CAACC,GAAR,CAAYC,UAAlD,CAHhC;AAAA,0BAIQV,GAAG,CAACW,IAJZ,EAIhBC,QAJgB,aAIhBA,QAJgB,EAINC,SAJM,aAINA,SAJM;AAMlBC,cAAAA,QANkB,GAMPC,QAAQ,CAACf,GAAG,CAACgB,MAAJ,CAAWC,SAAZ,CAND;AAAA;AAAA,qBAOLC,eAAQC,cAAR,CAAuBL,QAAvB,CAPK;;AAAA;AAOlBM,cAAAA,IAPkB;;AAAA,kBASnBN,QATmB;AAAA;AAAA;AAAA;;AAAA,+CAUfb,GAAG,CAACoB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,gBAAAA,MAAM,EAAE,GAAV;AAAeE,gBAAAA,OAAO,gBAASlB,+CAA+C,CAACmB,QAAzD;AAAtB,eAArB,CAVe;;AAAA;AAAA,oBAapBJ,IAAI,CAACK,MAAL,KAAgB,CAbI;AAAA;AAAA;AAAA;;AAAA,+CAcfxB,GAAG,CAACoB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,gBAAAA,MAAM,EAAE,GAAV;AAAeE,gBAAAA,OAAO,gBAASlB,+CAA+C,CAACmB,QAAzD,kCAAyFV,QAAzF;AAAtB,eAArB,CAde;;AAAA;AAAA,oBAgBpBM,IAAI,CAAC,CAAD,CAAJ,CAAQM,MAAR,KAAmBrB,+CAA+C,CAACsB,EAhB/C;AAAA;AAAA;AAAA;;AAAA,+CAiBf1B,GAAG,CAACoB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,gBAAAA,MAAM,EAAE,GAAV;AAAeE,gBAAAA,OAAO,gBAASlB,+CAA+C,CAACmB,QAAzD,uDAA8GV,QAA9G;AAAtB,eAArB,CAjBe;;AAAA;AAmBlBc,cAAAA,UAnBkB,GAmBL;AACjBhB,gBAAAA,QAAQ,EAAEA,QAAQ,IAAIQ,IAAI,CAAC,CAAD,CAAJ,CAAQR,QADb;AAEjBC,gBAAAA,SAAS,EAAEA,SAAS,IAAIO,IAAI,CAAC,CAAD,CAAJ,CAAQP;AAFf,eAnBK;AAAA;AAAA,qBAuBIK,eAAQW,cAAR,CAAuBD,UAAvB,EAAmCb,QAAQ,CAACf,GAAG,CAACgB,MAAJ,CAAWC,SAAZ,CAA3C,CAvBJ;;AAAA;AAuBlBa,cAAAA,aAvBkB;AAAA,+CAwBjB7B,GAAG,CAACoB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,gBAAAA,MAAM,EAAE,GAAV;AAAeE,gBAAAA,OAAO,gBAASlB,+CAA+C,CAACmB,QAAzD,qCAA4FV,QAA5F,+BAAtB;AAAwJiB,gBAAAA,YAAY,EAAED;AAAtK,eAArB,CAxBiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAA5B;eA2BehC,mB","sourceRoot":"C:\\Users\\Positivo_Computer\\Desktop\\broadcast-andela-cycle13\\server\\v1\\api\\controllers","sourcesContent":["import dotenv from 'dotenv';\nimport jwt from 'jsonwebtoken';\nimport impData from '../models/DB';\nimport impDataFromToken from '../helpers/token';\n\ndotenv.config();\nconst updateSingleRecords = {\n  async updateOneRecordsLocation(req, res) {\n    const receive_token_from_header = req.headers.authorization;\n    const decoded_token_in_the_way_to_obtain_user_details = jwt.verify(receive_token_from_header, process.env.SECRET_KEY);\n    const { latitude, longitude } = req.body;\n\n    const recordId = parseInt(req.params.redflagid);\n    const data = await impData.fetchOneRecord(recordId);\n\n    if (!recordId) {\n      return res.status(404).json({ status: 404, message: `Hey ${decoded_token_in_the_way_to_obtain_user_details.username} insert record id ` });\n    }\n\n    if (data.length === 0) {\n      return res.status(404).json({ status: 404, message: `Hey ${decoded_token_in_the_way_to_obtain_user_details.username} this record with id ${recordId} is not found ` });\n    }\n    if (data[0].userid !== decoded_token_in_the_way_to_obtain_user_details.id) {\n      return res.status(401).json({ status: 401, message: `Hey ${decoded_token_in_the_way_to_obtain_user_details.username} you are not owner of this record with id ${recordId} ` });\n    }\n    const readyDatas = {\n      latitude: latitude || data[0].latitude,\n      longitude: longitude || data[0].longitude,\n    };\n    const updatedRecord = await impData.updateLocation(readyDatas, parseInt(req.params.redflagid));\n    return res.status(200).json({ status: 200, message: `Hey ${decoded_token_in_the_way_to_obtain_user_details.username} !! Your record with id ${recordId} was updated Successfully `, updateRecord: updatedRecord });\n  },\n};\nexport default updateSingleRecords;\n"]}