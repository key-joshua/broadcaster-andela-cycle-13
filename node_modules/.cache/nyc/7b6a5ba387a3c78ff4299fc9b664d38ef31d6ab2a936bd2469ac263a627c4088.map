{"version":3,"sources":["changesStatus.js"],"names":["dotenv","config","changeStatusOfSingleRecords","adminchangeStatusOfOneRecord","req","res","receive_token_from_header","headers","authorization","decoded_token_in_the_way_to_obtain_user_details","jwt","verify","process","env","SECRET_KEY","recordId","parseInt","params","redflagid","data","impData","fetchOneRecord","status","json","message","username","updatedRecord","changeStatus","body","changedRecord"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEAA,mBAAOC,MAAP;;AACA,IAAMC,2BAA2B,GAAG;AAClCC,EAAAA,4BADkC,wCACLC,GADK,EACAC,GADA,EACK;AACrC,QAAMC,yBAAyB,GAAGF,GAAG,CAACG,OAAJ,CAAYC,aAA9C;;AACA,QAAMC,+CAA+C,GAAGC,yBAAIC,MAAJ,CAAWL,yBAAX,EAAsCM,OAAO,CAACC,GAAR,CAAYC,UAAlD,CAAxD;;AAEA,QAAMC,QAAQ,GAAGC,QAAQ,CAACZ,GAAG,CAACa,MAAJ,CAAWC,SAAZ,CAAzB;;AACA,QAAMC,IAAI,GAAGC,eAAQC,cAAR,CAAuBN,QAAvB,CAAb;;AAEA,QAAI,CAACA,QAAL,EAAe;AACb,aAAOV,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,QAAAA,MAAM,EAAE,GAAV;AAAeE,QAAAA,OAAO,sBAAef,+CAA+C,CAACgB,QAA/D;AAAtB,OAArB,CAAP;AACD;;AACD,QAAI,CAACN,IAAL,EAAW;AACT,aAAOd,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,QAAAA,MAAM,EAAE,GAAV;AAAeE,QAAAA,OAAO,sBAAef,+CAA+C,CAACgB,QAA/D,kCAA+FV,QAA/F;AAAtB,OAArB,CAAP;AACD;;AACD,QAAMW,aAAa,GAAGN,eAAQO,YAAR,CAAqBX,QAAQ,CAACZ,GAAG,CAACa,MAAJ,CAAWC,SAAZ,CAA7B,EAAqDd,GAAG,CAACwB,IAAzD,CAAtB;;AACA,WAAOvB,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,MAAAA,MAAM,EAAE,GAAV;AAAeE,MAAAA,OAAO,sBAAef,+CAA+C,CAACgB,QAA/D,+DAA4HV,QAA5H,mBAAtB;AAA4Kc,MAAAA,aAAa,EAAEH;AAA3L,KAArB,CAAP;AACD;AAhBiC,CAApC;eAkBexB,2B","sourceRoot":"C:\\Users\\Positivo_Computer\\Desktop\\broadcast-andela-cycle12\\server\\v1\\api\\controllers","sourcesContent":["import dotenv from 'dotenv';\nimport jwt from 'jsonwebtoken';\nimport impData from '../models/DB';\nimport impDataFromToken from '../helpers/token';\n\ndotenv.config();\nconst changeStatusOfSingleRecords = {\n  adminchangeStatusOfOneRecord(req, res) {\n    const receive_token_from_header = req.headers.authorization;\n    const decoded_token_in_the_way_to_obtain_user_details = jwt.verify(receive_token_from_header, process.env.SECRET_KEY);\n\n    const recordId = parseInt(req.params.redflagid);\n    const data = impData.fetchOneRecord(recordId);\n\n    if (!recordId) {\n      return res.status(404).json({ status: 404, message: `Hey Admin ${decoded_token_in_the_way_to_obtain_user_details.username} insert record id ` });\n    }\n    if (!data) {\n      return res.status(404).json({ status: 404, message: `Hey Admin ${decoded_token_in_the_way_to_obtain_user_details.username} this record with id ${recordId} is not found ` });\n    }\n    const updatedRecord = impData.changeStatus(parseInt(req.params.redflagid), req.body);\n    return res.status(200).json({ status: 200, message: `Hey Admin ${decoded_token_in_the_way_to_obtain_user_details.username} !! You are changed status of this record with id ${recordId} Successfully `, changedRecord: updatedRecord });\n  },\n};\nexport default changeStatusOfSingleRecords;\n"]}