{"version":3,"sources":["signupHelper.js"],"names":["help","firstName","empty_firstName","lastname","empty_lastName","username","empty_userName","email","empty_email","phone","empty_phone","password","empty_password","exphelp"],"mappings":";;;;;;;;;;;;;IAAMA,I;;;;;;;;;gDAEyBC,S,EAAW;AACpC,aAAO,KAAKC,eAAL,GAAuB,CAACD,SAA/B;AACF;;;+CAE0BE,Q,EAAU;AAClC,aAAO,KAAKC,cAAL,GAAsB,CAACD,QAA9B;AACF;;;+CAE0BE,Q,EAAU;AAClC,aAAO,KAAKC,cAAL,GAAsB,CAACD,QAA9B;AACF;;;4CAEuBE,K,EAAO;AAC5B,aAAO,KAAKC,WAAL,GAAmB,CAACD,KAA3B;AACF;;;4CAEuBE,K,EAAO;AAC5B,aAAO,KAAKC,WAAL,GAAmB,CAACD,KAA3B;AACF;;;+CAE0BE,Q,EAAU;AAClC,aAAO,KAAKC,cAAL,GAAsB,CAACD,QAA9B;AACF,K,CAED;AACA;AACA;AACA;AACA;AAEH;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA,IAAME,OAAO,GAAG,IAAIb,IAAJ,EAAhB;eACea,O","sourceRoot":"C:\\Users\\Positivo_Computer\\Desktop\\broadcast-andela-cycle13\\server\\api\\helpers","sourcesContent":["class help {\r\n\r\n   check_firstName_if_is_empty(firstName) { \r\n      return this.empty_firstName = !firstName;\r\n   }\r\n\r\n   check_lastName_if_is_empty(lastname) { \r\n      return this.empty_lastName = !lastname;\r\n   }\r\n\r\n   check_userName_if_is_empty(username) { \r\n      return this.empty_userName = !username;\r\n   }\r\n   \r\n   check_email_if_is_empty(email) { \r\n      return this.empty_email = !email;\r\n   }\r\n\r\n   check_phone_if_is_empty(phone) { \r\n      return this.empty_phone = !phone;\r\n   }\r\n\r\n   check_password_if_is_empty(password) { \r\n      return this.empty_password = !password;\r\n   }\r\n\r\n   //  check_length_password(password){\r\n   //      const get_inserted_user_password = password;\r\n   //      const give_format_inserted_user_password = get_inserted_user_password.toString().trim().toLowerCase();\r\n   //      return this.weak_password = (give_format_inserted_user_password.length < 6);\r\n   //  }\r\n    \r\n//     check_if_name_contains_number(Name){\r\n//       const get_inserted_user_Name = Name;\r\n//       const give_format_inserted_user_Name = get_inserted_user_Name.toString().trim().toLowerCase();\r\n//       return this.weak_Name = (give_format_inserted_user_Name.search(/[0-9]/) === -1);\r\n//    }\r\n\r\n//    check_if_name_contains_character(Name){\r\n//       const get_inserted_user_Name = Name;\r\n//       const give_format_inserted_user_Name = get_inserted_user_Name.toString().trim().toLowerCase();\r\n//       return this.weak_Name = (give_format_inserted_user_Name.search(/[!\\@\\#\\$\\%\\&\\*\\~\\`\\:\\\"\"\\''\\'\\\"\\?\\/\\,\\.]/) === -1);\r\n//    }\r\n\r\n//    check_if_the_use_sample(Name) {\r\n//       return this.sample = Name.toString().trim().toLowerCase() === \"qwerty@123\";\r\n//    }\r\n\r\n//    check_email(Email){\r\n//       const get_inserted_user_email = Email;\r\n//       const give_format_the_email_user_inserted_before_that_email_goes_in_the_database_to_save = get_inserted_user_email.toString().trim().toLowerCase();\r\n//       const mail = give_format_the_email_user_inserted_before_that_email_goes_in_the_database_to_save;\r\n//       const real_email = /^(([a-zA-Z0-9\\.-_]{2,6})+)@(([a-zA-Z0-9]{2,6})+).([a-z]{2,6})(.[a-z]{2,6})$/;\r\n//       return this.finalCheck = (!real_email.test(mail));\r\n//    }\r\n} \r\n\r\nconst exphelp = new help();\r\nexport default exphelp;"]}