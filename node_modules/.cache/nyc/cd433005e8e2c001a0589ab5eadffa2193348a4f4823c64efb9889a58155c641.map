{"version":3,"sources":["signupHelper.js"],"names":["help","firstName","empty_firstName","lastName","empty_lastName","exphelp"],"mappings":";;;;;;;;;;;;;IAAMA,I;;;;;;;;;gDAEyBC,S,EAAW;AACpC,aAAO,KAAKC,eAAL,GAAuB,CAACD,SAA/B;AACF;;;+CAE0BE,Q,EAAU;AAClC,aAAO,KAAKC,cAAL,GAAsB,CAACD,QAA9B;AACF,K,CAEJ;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA,IAAME,OAAO,GAAG,IAAIL,IAAJ,EAAhB;eACeK,O","sourceRoot":"C:\\Users\\Positivo_Computer\\Desktop\\broadcast-andela-cycle13\\server\\api\\helpers","sourcesContent":["class help {\r\n\r\n   check_firstName_if_is_empty(firstName) { \r\n      return this.empty_firstName = !firstName;\r\n   }\r\n\r\n   check_lastName_if_is_empty(lastName) { \r\n      return this.empty_lastName = !lastName;\r\n   }\r\n\r\n//    check_mark_if_is_empty(Mark) { \r\n//       return this.empty_mark = !Mark;\r\n//    }\r\n\r\n//    check_Level_if_is_empty(Level) { \r\n//       return this.empty_level = !Level;\r\n//    }\r\n\r\n//    check_Email_if_is_empty(Email) { \r\n//       return this.empty_Email = !Email;\r\n//    }\r\n\r\n//     check_length_name(Name){\r\n//         const get_inserted_user_Name = Name;\r\n//         const give_format_inserted_user_Name = get_inserted_user_Name.toString().trim().toLowerCase();\r\n//         return this.weak_Name = (give_format_inserted_user_Name.length < 6);\r\n        \r\n//     }\r\n    \r\n//     check_if_name_contains_number(Name){\r\n//       const get_inserted_user_Name = Name;\r\n//       const give_format_inserted_user_Name = get_inserted_user_Name.toString().trim().toLowerCase();\r\n//       return this.weak_Name = (give_format_inserted_user_Name.search(/[0-9]/) === -1);\r\n//    }\r\n\r\n//    check_if_name_contains_character(Name){\r\n//       const get_inserted_user_Name = Name;\r\n//       const give_format_inserted_user_Name = get_inserted_user_Name.toString().trim().toLowerCase();\r\n//       return this.weak_Name = (give_format_inserted_user_Name.search(/[!\\@\\#\\$\\%\\&\\*\\~\\`\\:\\\"\"\\''\\'\\\"\\?\\/\\,\\.]/) === -1);\r\n//    }\r\n\r\n//    check_if_the_use_sample(Name) {\r\n//       return this.sample = Name.toString().trim().toLowerCase() === \"qwerty@123\";\r\n//    }\r\n\r\n//    check_email(Email){\r\n//       const get_inserted_user_email = Email;\r\n//       const give_format_the_email_user_inserted_before_that_email_goes_in_the_database_to_save = get_inserted_user_email.toString().trim().toLowerCase();\r\n//       const mail = give_format_the_email_user_inserted_before_that_email_goes_in_the_database_to_save;\r\n//       const real_email = /^(([a-zA-Z0-9\\.-_]{2,6})+)@(([a-zA-Z0-9]{2,6})+).([a-z]{2,6})(.[a-z]{2,6})$/;\r\n//       return this.finalCheck = (!real_email.test(mail));\r\n//    }\r\n} \r\n\r\nconst exphelp = new help();\r\nexport default exphelp;"]}