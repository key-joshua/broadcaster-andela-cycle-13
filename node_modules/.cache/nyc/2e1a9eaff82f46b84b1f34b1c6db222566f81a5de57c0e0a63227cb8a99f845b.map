{"version":3,"sources":["createRecord.js"],"names":["dotenv","config","createSingleRecords","createOneRecords","req","res","receive_token_from_header","headers","authorization","decoded_token_in_the_way_to_obtain_user_details","jwt","verify","process","env","SECRET_KEY","body","createdBy","title","type","latitude","longitude","comment","ckTitle","imphelp","check_title_if_is_empty","status","json","message","username","ckType","check_type_if_is_empty","ckComment","check_comment_if_is_empty","imgs","vids","files","images","imgsPath","map","path","join","videos","vidsPath","readyDatas","userId","id","impData","createe","data","fetchLastCreatedRecord","created","record"],"mappings":"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","sourceRoot":"C:\\Users\\Positivo_Computer\\Desktop\\broadcaster-andela-cycle-13\\server\\v1\\api\\controllers","sourcesContent":["import dotenv from 'dotenv';\r\nimport jwt from 'jsonwebtoken';\r\nimport impData from '../models/DB';\r\nimport imphelp from '../helpers/createHelper';\r\n\r\ndotenv.config();\r\nconst createSingleRecords = {\r\n  createOneRecords(req, res) {\r\n    const receive_token_from_header = req.headers.authorization;\r\n    const decoded_token_in_the_way_to_obtain_user_details = jwt.verify(receive_token_from_header, process.env.SECRET_KEY);\r\n    const { createdBy, title, type, latitude, longitude, comment } = req.body;\r\n\r\n    const ckTitle = imphelp.check_title_if_is_empty(title);\r\n    if (ckTitle) return res.status(400).json({ status: 400, message: `Hey ${decoded_token_in_the_way_to_obtain_user_details.username} record title is needed !!` });\r\n\r\n    const ckType = imphelp.check_type_if_is_empty(type);\r\n    if (ckType) return res.status(400).json({ status: 400, message: `Hey ${decoded_token_in_the_way_to_obtain_user_details.username} record type is needed !!` });\r\n\r\n    const ckComment = imphelp.check_comment_if_is_empty(comment);\r\n    if (ckComment) return res.status(400).json({ status: 400, message: `Hey ${decoded_token_in_the_way_to_obtain_user_details.username} record comment is needed !!` });\r\n\r\n    let imgs;\r\n    let vids;\r\n    if (req.files) {\r\n      if (req.files.images) {\r\n        const imgsPath = req.files.images.map(({ path }) => path);\r\n        imgs = imgsPath.join(',  ');\r\n      }\r\n      if (req.files.videos) {\r\n        const vidsPath = req.files.videos.map(({ path }) => path);\r\n        vids = vidsPath.join(',  ');\r\n      }\r\n    }\r\n\r\n    const readyDatas = {\r\n      userId: decoded_token_in_the_way_to_obtain_user_details.id,\r\n      createdBy: createdBy || decoded_token_in_the_way_to_obtain_user_details.username,\r\n      title: title,\r\n      type: type,\r\n      latitude: latitude,\r\n      longitude: longitude,\r\n      images: imgs,\r\n      videos: vids,\r\n      comment: comment,\r\n    };\r\n    impData.createe(readyDatas);\r\n    const data = impData.fetchLastCreatedRecord(readyDatas.userId);\r\n    res.status(201).json({ status: 201, message: `Hy ${decoded_token_in_the_way_to_obtain_user_details.username} your record has created successfully on ${imphelp.created}`, record: data });\r\n  },\r\n};\r\nexport default createSingleRecords;\r\n"]}