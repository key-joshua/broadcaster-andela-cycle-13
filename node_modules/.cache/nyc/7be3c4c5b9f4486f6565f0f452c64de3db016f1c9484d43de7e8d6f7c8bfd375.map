{"version":3,"sources":["createRecord.js"],"names":["dotenv","config","createSingleRecords","createOneRecords","req","res","receive_token_from_header","headers","authorization","decoded_token_in_the_way_to_obtain_user_details","jwt","verify","process","env","SECRET_KEY","body","title","type","latitude","longitude","images","videos","comment","ckTitle","imphelp","check_title_if_is_empty","status","json","message","username","ckType","check_type_if_is_empty","ckComment","check_comment_if_is_empty","files","readyDatas","userId","id","createdBy","impData","createe","data","fetchLastCreatedRecord","created","record","path"],"mappings":"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","sourceRoot":"C:\\Users\\Positivo_Computer\\Desktop\\broadcast-andela-cycle13\\server\\v1\\api\\controllers","sourcesContent":["import dotenv from 'dotenv';\nimport jwt from 'jsonwebtoken';\nimport impData from '../models/DB';\nimport imphelp from '../helpers/createHelper';\n\ndotenv.config();\nconst createSingleRecords = {\n  createOneRecords(req, res) {\n    const receive_token_from_header = req.headers.authorization;\n    const decoded_token_in_the_way_to_obtain_user_details = jwt.verify(receive_token_from_header, process.env.SECRET_KEY);\n    const { title, type, latitude, longitude, images, videos, comment } = req.body;\n\n    const ckTitle = imphelp.check_title_if_is_empty(title);\n    if (ckTitle) return res.status(400).json({ status: 400, message: `Hey ${decoded_token_in_the_way_to_obtain_user_details.username} record title is needed !!` });\n\n    const ckType = imphelp.check_type_if_is_empty(type);\n    if (ckType) return res.status(400).json({ status: 400, message: `Hey ${decoded_token_in_the_way_to_obtain_user_details.username} record type is needed !!` });\n\n    const ckComment = imphelp.check_comment_if_is_empty(comment);\n    if (ckComment) return res.status(400).json({ status: 400, message: `Hey ${decoded_token_in_the_way_to_obtain_user_details.username} record comment is needed !!` });\n\n    if (!req.files.images && !req.files.videos) {\n      const readyDatas = {\n        userId: decoded_token_in_the_way_to_obtain_user_details.id,\n        createdBy: decoded_token_in_the_way_to_obtain_user_details.username,\n        title: title,\n        type: type,\n        latitude: latitude,\n        longitude: longitude,\n        images: 'none',\n        videos: 'none',\n        comment: comment,\n      };\n      impData.createe(readyDatas);\n      const data = impData.fetchLastCreatedRecord(readyDatas.userId);\n      res.status(201).json({ status: 201, message: `Hy ${decoded_token_in_the_way_to_obtain_user_details.username} your record has created successfully on ${imphelp.created}`, record: data });\n    } else if (!req.files.images) {\n      const readyDatas = {\n        userId: decoded_token_in_the_way_to_obtain_user_details.id,\n        createdBy: decoded_token_in_the_way_to_obtain_user_details.username,\n        title: title,\n        type: type,\n        latitude: latitude,\n        longitude: longitude,\n        images: 'none',\n        videos: req.files.videos[0].path,\n        comment: comment,\n      };\n      impData.createe(readyDatas);\n      const data = impData.fetchLastCreatedRecord(readyDatas.userId);\n      res.status(201).json({ status: 201, message: `Hy ${decoded_token_in_the_way_to_obtain_user_details.username} your record has created successfully on ${imphelp.created}`, record: data });\n    } else if (!req.files.videos) {\n      const readyDatas = {\n        userId: decoded_token_in_the_way_to_obtain_user_details.id,\n        createdBy: decoded_token_in_the_way_to_obtain_user_details.username,\n        title: title,\n        type: type,\n        latitude: latitude,\n        longitude: longitude,\n        images: req.files.images[0].path,\n        videos: 'none',\n        comment: comment,\n      };\n      impData.createe(readyDatas);\n      const data = impData.fetchLastCreatedRecord(readyDatas.userId);\n      res.status(201).json({ status: 201, message: `Hy ${decoded_token_in_the_way_to_obtain_user_details.username} your record has created successfully on ${imphelp.created}`, record: data });\n    } else {\n      const readyDatas = {\n        userId: decoded_token_in_the_way_to_obtain_user_details.id,\n        createdBy: decoded_token_in_the_way_to_obtain_user_details.username,\n        title: title,\n        type: type,\n        latitude: latitude,\n        longitude: longitude,\n        images: req.files.images[0].path,\n        videos: req.files.videos[0].path,\n        comment: comment,\n      };\n      impData.createe(readyDatas);\n      const data = impData.fetchLastCreatedRecord(readyDatas.userId);\n      res.status(201).json({ status: 201, message: `Hy ${decoded_token_in_the_way_to_obtain_user_details.username} your record has created successfully on ${imphelp.created}`, record: data });\n    }\n  },\n};\nexport default createSingleRecords;\n"]}