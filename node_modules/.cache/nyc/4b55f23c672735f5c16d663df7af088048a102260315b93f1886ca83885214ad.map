{"version":3,"sources":["checkAdmin.js"],"names":["dotenv","config","verfy_admin","request","response","next","receive_token_from_header","headers","authorization","decoded_token_in_the_way_to_obtain_user_details","jwt","verify","process","env","SECRET_KEY","category","status","json","message","firstname","error"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEAA,mBAAOC,MAAP;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD,EAAUC,QAAV,EAAoBC,IAApB,EAA6B;AAC/C,MAAI;AACF,QAAMC,yBAAyB,GAAGH,OAAO,CAACI,OAAR,CAAgBC,aAAlD;;AACA,QAAMC,+CAA+C,GAAGC,yBAAIC,MAAJ,CAAWL,yBAAX,EAAsCM,OAAO,CAACC,GAAR,CAAYC,UAAlD,CAAxD;;AACA,QAAIL,+CAA+C,CAACM,QAAhD,KAA6D,OAAjE,EAA0E;AAAEV,MAAAA,IAAI;AAAK,KAArF,MAA2F;AAAE,aAAOD,QAAQ,CAACY,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAAED,QAAAA,MAAM,EAAE,GAAV;AAAeE,QAAAA,OAAO,gBAAST,+CAA+C,CAACU,SAAzD;AAAtB,OAA1B,CAAP;AAA6K;AAC3Q,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd,WAAOhB,QAAQ,CAACY,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAAED,MAAAA,MAAM,EAAE,GAAV;AAAeE,MAAAA,OAAO,EAAE;AAAxB,KAA1B,CAAP;AACD;AACF,CARD;;eAUehB,W","sourceRoot":"C:\\Users\\Positivo_Computer\\Desktop\\broadcast-andela-cycle12\\server\\v1\\api\\middlewares","sourcesContent":["import jwt from 'jsonwebtoken';\nimport dotenv from 'dotenv';\n\ndotenv.config();\nconst verfy_admin = (request, response, next) => {\n  try {\n    const receive_token_from_header = request.headers.authorization;\n    const decoded_token_in_the_way_to_obtain_user_details = jwt.verify(receive_token_from_header, process.env.SECRET_KEY);\n    if (decoded_token_in_the_way_to_obtain_user_details.category === 'admin') { next(); } else { return response.status(401).json({ status: 401, message: ` Hy ${decoded_token_in_the_way_to_obtain_user_details.firstname} !! This action is available for Admins only` }); }\n  } catch (error) {\n    return response.status(401).json({ status: 401, message: ' Hy !! Access denied, please provide Token ' });\n  }\n};\n\nexport default verfy_admin;\n"]}