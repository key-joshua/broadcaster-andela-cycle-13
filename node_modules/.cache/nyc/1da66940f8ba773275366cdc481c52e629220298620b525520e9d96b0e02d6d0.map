{"version":3,"sources":["helper.js"],"names":["help","Name","empty_name","Mark","empty_mark","Level","empty_level","get_inserted_user_Name","give_format_inserted_user_Name","toString","trim","toLowerCase","weak_Name","length","search","sample"],"mappings":";;;;;;;;;;;;;IAAMA,I;;;;;;;;;2CAEoBC,I,EAAM;AAC1B,aAAO,KAAKC,UAAL,GAAkB,CAACD,IAA1B;AACF;;;2CAEsBE,I,EAAM;AAC1B,aAAO,KAAKC,UAAL,GAAkB,CAACD,IAA1B;AACF;;;4CAEuBE,K,EAAO;AAC5B,aAAO,KAAKC,WAAL,GAAmB,CAACD,KAA3B;AACF;;;sCAEkBJ,I,EAAK;AACnB,UAAMM,sBAAsB,GAAGN,IAA/B;AACA,UAAMO,8BAA8B,GAAGD,sBAAsB,CAACE,QAAvB,GAAkCC,IAAlC,GAAyCC,WAAzC,EAAvC;AACA,aAAO,KAAKC,SAAL,GAAkBJ,8BAA8B,CAACK,MAA/B,GAAwC,CAAjE;AAEH;;;kDAE6BZ,I,EAAK;AACjC,UAAMM,sBAAsB,GAAGN,IAA/B;AACA,UAAMO,8BAA8B,GAAGD,sBAAsB,CAACE,QAAvB,GAAkCC,IAAlC,GAAyCC,WAAzC,EAAvC;AACA,aAAO,KAAKC,SAAL,GAAkBJ,8BAA8B,CAACM,MAA/B,CAAsC,OAAtC,MAAmD,CAAC,CAA7E;AACF;;;qDAEgCb,I,EAAK;AACnC,UAAMM,sBAAsB,GAAGN,IAA/B;AACA,UAAMO,8BAA8B,GAAGD,sBAAsB,CAACE,QAAvB,GAAkCC,IAAlC,GAAyCC,WAAzC,EAAvC;AACA,aAAO,KAAKC,SAAL,GAAkBJ,8BAA8B,CAACM,MAA/B,CAAsC,yCAAtC,MAAqF,CAAC,CAA/G;AACF;;;4CAEuBb,I,EAAM;AAC3B,aAAO,KAAKc,MAAL,GAAcd,IAAI,CAACQ,QAAL,GAAgBC,IAAhB,GAAuBC,WAAvB,OAAyC,YAA9D;AACA,K,CAEH;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;eAQY,IAAIX,IAAJ,E","sourceRoot":"C:\\Users\\Positivo_Computer\\Desktop\\learn-Testing-Travis-Coveralls-Maintainability\\server\\api\\helpers","sourcesContent":["class help {\r\n\r\n   check_name_if_is_empty(Name) { \r\n      return this.empty_name = !Name;\r\n   }\r\n\r\n   check_mark_if_is_empty(Mark) { \r\n      return this.empty_mark = !Mark;\r\n   }\r\n\r\n   check_Level_if_is_empty(Level) { \r\n      return this.empty_level = !Level;\r\n   }\r\n\r\n    check_length_name(Name){\r\n        const get_inserted_user_Name = Name;\r\n        const give_format_inserted_user_Name = get_inserted_user_Name.toString().trim().toLowerCase();\r\n        return this.weak_Name = (give_format_inserted_user_Name.length < 6);\r\n        \r\n    }\r\n    \r\n    check_if_name_contains_number(Name){\r\n      const get_inserted_user_Name = Name;\r\n      const give_format_inserted_user_Name = get_inserted_user_Name.toString().trim().toLowerCase();\r\n      return this.weak_Name = (give_format_inserted_user_Name.search(/[0-9]/) === -1);\r\n   }\r\n\r\n   check_if_name_contains_character(Name){\r\n      const get_inserted_user_Name = Name;\r\n      const give_format_inserted_user_Name = get_inserted_user_Name.toString().trim().toLowerCase();\r\n      return this.weak_Name = (give_format_inserted_user_Name.search(/[!\\@\\#\\$\\%\\&\\*\\~\\`\\:\\\"\"\\''\\'\\\"\\?\\/\\,\\.]/) === -1);\r\n   }\r\n\r\n   check_if_the_use_sample(Name) { \r\n      return this.sample = Name.toString().trim().toLowerCase() === \"qwerty@123\"\r\n     }\r\n   \r\n   //   check_email(email){\r\n   //    const get_inserted_user_email = email;\r\n   //    const give_format_the_email_user_inserted_before_that_email_goes_in_the_database_to_save = get_inserted_user_email.toString().trim().toLowerCase();\r\n   //    const mail = give_format_the_email_user_inserted_before_that_email_goes_in_the_database_to_save;\r\n   //    const real_email = /^(([a-zA-Z0-9\\.-_]{2,6})+)@(([a-zA-Z0-9]{2,6})+).([a-z]{2,6})(.[a-z]{2,6})$/;\r\n   //    if (!real_email.test(mail)) {  return mail; }\r\n   //  }\r\n\r\n   \r\n     \r\n\r\n   \r\n} \r\n\r\nexport default new help();"]}