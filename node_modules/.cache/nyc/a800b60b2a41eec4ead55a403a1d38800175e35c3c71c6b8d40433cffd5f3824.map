{"version":3,"sources":["Xsignup.js"],"names":["XController","insert","req","res","body","Name","Marks","Level","Email","ckName","help","check_name_if_is_empty","status","send","message","ckStrngName","check_length_name","ckStrngName1","check_if_name_contains_number","ckStrngName2","check_if_name_contains_character","cksample","check_if_the_use_sample","ckMarks","check_mark_if_is_empty","ckLevel","check_Level_if_is_empty","ckEmail","check_Email_if_is_empty","ckEmaila","check_email","datas","toString","trim","toLowerCase","marks","classStuff","create","retrieve","students","findAll","retrieveOne","student","findOne","parseInt","params","id","update","updatedclassStuff","stud","Data"],"mappings":"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","sourceRoot":"C:\\Users\\Positivo_Computer\\Desktop\\broadcast-andela-cycle13\\server\\v1\\api\\controllers","sourcesContent":["import classStuff from '../models/class';\nimport help from '../helpers/helper';\n\nconst XController = {\n  insert(req, res) {\n    const { Name, Marks, Level, Email } = req.body;\n    const ckName = help.check_name_if_is_empty(Name);\n    if (ckName) return res.status(400).send({ message: 'Hey Check Name field are required' });\n\n    const ckStrngName = help.check_length_name(Name);\n    if (ckStrngName) return res.status(400).send({ message: 'Hey Name should contain above six characters' });\n\n    const ckStrngName1 = help.check_if_name_contains_number(Name);\n    if (ckStrngName1) return res.status(400).send({ message: 'Hey Name should contain numbers' });\n\n    const ckStrngName2 = help.check_if_name_contains_character(Name);\n    if (ckStrngName2) return res.status(400).send({ message: 'Hey Name should contain special character like qwerty@123' });\n\n    const cksample = help.check_if_the_use_sample(Name);\n    if (cksample) return res.status(400).send({ message: 'Hey no one allowed to usethis sample qwerty@123' });\n\n    const ckMarks = help.check_mark_if_is_empty(Marks);\n    if (ckMarks) return res.status(400).send({ message: 'Hey Check Marks field is required' });\n\n    const ckLevel = help.check_Level_if_is_empty(Level);\n    if (ckLevel) return res.status(400).send({ message: 'Hey Check Level field is required' });\n\n    const ckEmail = help.check_Email_if_is_empty(Email);\n    if (ckEmail) return res.status(400).send({ message: 'Hey Check Email field is required' });\n\n    const ckEmaila = help.check_email(Email);\n    if (ckEmaila) return res.status(400).send({ message: 'Hey you are using Invalid Email' });\n\n    const datas = {\n      Name: Name.toString().trim().toLowerCase(),\n      marks: Marks.toString().trim().toLowerCase(),\n      Marks: Level.toString().trim().toLowerCase(),\n      Email: Email.toString().trim().toLowerCase(),\n    };\n\n    classStuff.create(datas);\n    return res.status(201).send({ message: 'Hy You added Successfully ', datas });\n  },\n  retrieve(req, res) {\n    const students = classStuff.findAll();\n    return res.status(200).send({ message: 'student retrieved Successfully', students });\n  },\n  retrieveOne: (req, res) => {\n    const student = classStuff.findOne(parseInt(req.params.id));\n\n    if (!student) {\n      return res.status(404).send({ message: 'student not found' });\n    }\n    return res.status(200).send({ message: 'student retrieved Successfully', student });\n  },\n  update: (req, res) => {\n    const student = classStuff.findOne(parseInt(req.params.id));\n    if (!student) {\n      return res.status(404).send({ message: 'student not found' });\n    }\n    const updatedclassStuff = classStuff.update(parseInt(req.params.id), req.body);\n    return res.status(200).send({ message: 'student updated Successfully', updatedclassStuff });\n  },\n  delete: (req, res) => {\n    const student = classStuff.findOne(parseInt(req.params.id));\n    if (!student) {\n      return res.status(404).send({ message: 'student not found' });\n    }\n    const stud = classStuff.delete(parseInt(req.params.id));\n    return res.status(204).send({ message: 'student deleted Successfully', Data: stud });\n  },\n};\nexport default XController;\n"]}