{"version":3,"sources":["usersDB.js"],"names":["storeData","dataDB","id","category","firstname","lastname","username","email","phoneNumber","password","createdDate","modifiedDate","email_to_check","toString","trim","toLowerCase","email_is_exist","find","user","data","newUser","length","phone","Date","push","expstoreData"],"mappings":";;;;;;;;;;;;;IAAMA,S;;;AAEJ,uBAAc;AAAA;AACV,SAAKC,MAAL,GAAc,CACZ;AACEC,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,QAAQ,EAAE,OAFZ;AAGEC,MAAAA,SAAS,EAAE,QAHb;AAIEC,MAAAA,QAAQ,EAAE,QAJZ;AAKEC,MAAAA,QAAQ,EAAE,YALZ;AAMEC,MAAAA,KAAK,EAAE,uBANT;AAOEC,MAAAA,WAAW,EAAE,eAPf;AAQEC,MAAAA,QAAQ,EAAE,8DARZ;AASEC,MAAAA,WAAW,EAAE,0BATf;AAUEC,MAAAA,YAAY,EAAE;AAVhB,KADY,EAaZ;AACIT,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,QAAQ,EAAE,MAFd;AAGIC,MAAAA,SAAS,EAAE,QAHf;AAIIC,MAAAA,QAAQ,EAAE,QAJd;AAKIC,MAAAA,QAAQ,EAAE,YALd;AAMIC,MAAAA,KAAK,EAAE,iBANX;AAOIC,MAAAA,WAAW,EAAE,eAPjB;AAQIC,MAAAA,QAAQ,EAAE,8DARd;AASIC,MAAAA,WAAW,EAAE,0BATjB;AAUIC,MAAAA,YAAY,EAAE;AAVlB,KAbY,CAAd;AA2BH;;;;yCAEqBJ,K,EAAO;AACzB,UAAMK,cAAc,GAAGL,KAAK,CAACM,QAAN,GAAiBC,IAAjB,GAAwBC,WAAxB,EAAvB;AACA,UAAMC,cAAc,GAAG,KAAKf,MAAL,CAAYgB,IAAZ,CAAiB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACX,KAAL,KAAeK,cAAnB;AAAA,OAArB,CAAvB;AACA,aAAOI,cAAP;AACH;;;+BAEW;AACV,aAAO,KAAKf,MAAZ;AACD;;;2BAEOkB,I,EAAM;AACV,UAAMC,OAAO,GAAG;AACdlB,QAAAA,EAAE,EAAE,KAAKD,MAAL,CAAYoB,MAAZ,GAAqB,CADX;AAEdlB,QAAAA,QAAQ,EAAE,MAFI;AAGdC,QAAAA,SAAS,EAAEe,IAAI,CAACf,SAHF;AAIdC,QAAAA,QAAQ,EAAEc,IAAI,CAACd,QAJD;AAKdC,QAAAA,QAAQ,EAAEa,IAAI,CAACb,QALD;AAMdC,QAAAA,KAAK,EAAEY,IAAI,CAACZ,KANE;AAOdC,QAAAA,WAAW,EAACW,IAAI,CAACG,KAPH;AAQdb,QAAAA,QAAQ,EAAEU,IAAI,CAACV,QARD;AASdC,QAAAA,WAAW,EAAE,IAAIa,IAAJ,EATC;AAUdZ,QAAAA,YAAY,EAAE;AAVA,OAAhB;AAYA,WAAKV,MAAL,CAAYuB,IAAZ,CAAiBJ,OAAjB;AACA,aAAOA,OAAP;AACD;;;;;AAEH,IAAMK,YAAY,GAAG,IAAIzB,SAAJ,EAArB;eACeyB,Y","sourceRoot":"C:\\Users\\Positivo_Computer\\Desktop\\broadcast-andela-cycle13\\server\\v1\\api\\models","sourcesContent":["class storeData {\r\n  \r\n  constructor() {\r\n      this.dataDB = [\r\n        {\r\n          id: 1,\r\n          category: \"admin\",\r\n          firstname: \"minani\",\r\n          lastname: \"joshua\",\r\n          username: \"key-joshua\",\r\n          email: \"k.joshua855@gmail.com\",\r\n          phoneNumber: \"+250789619442\",\r\n          password: \"$2a$12$Gl7eP0UdOxbxdfqo8dA3Qu/uVHk2RjaxITv1vwryc1oztX/gnTcPS\",\r\n          createdDate: \"2019-11-04T16:02:22.315Z\",\r\n          modifiedDate: \"none\"\r\n      },\r\n        {\r\n            id: 2,\r\n            category: \"none\",\r\n            firstname: \"minani\",\r\n            lastname: \"joshua\",\r\n            username: \"key-joshua\",\r\n            email: \"jessy@gmail.com\",\r\n            phoneNumber: \"+250789619442\",\r\n            password: \"$2a$12$deWjPMnV/giyrQIYP94k/eLCzY1QIymPdRVRJvyEkQ/Nx9CYqEvlu\",\r\n            createdDate: \"2019-11-04T14:51:24.283Z\",\r\n            modifiedDate: \"none\"\r\n        }\r\n  \r\n      ];\r\n  }\r\n  \r\n   check_if_email_exist(email) { \r\n      const email_to_check = email.toString().trim().toLowerCase();\r\n      const email_is_exist = this.dataDB.find(user => user.email === email_to_check); \r\n      return email_is_exist; \r\n  }\r\n   \r\n   fetchAll() {\r\n    return this.dataDB;\r\n  }\r\n\r\n   create(data) {\r\n      const newUser = {\r\n        id: this.dataDB.length + 1,\r\n        category: \"none\",\r\n        firstname: data.firstname,\r\n        lastname: data.lastname, \r\n        username: data.username,\r\n        email: data.email,\r\n        phoneNumber:data.phone,\r\n        password: data.password,\r\n        createdDate: new Date(),\r\n        modifiedDate: \"none\"\r\n      };\r\n      this.dataDB.push(newUser);\r\n      return newUser;\r\n    }\r\n  }\r\n  const expstoreData = new storeData();\r\n  export default expstoreData;"]}