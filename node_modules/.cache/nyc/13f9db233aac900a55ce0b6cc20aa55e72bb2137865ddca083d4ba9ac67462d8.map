{"version":3,"sources":["helper.js"],"names":["create_strong_password","name","empty_name","email","empty_email","get_inserted_user_email","give_format_the_email_user_inserted_before_that_email_goes_in_the_database_to_save","toString","trim","toLowerCase","mail","real_email","test","password","empty_password","sample_password","inserted_user_password","get_inserted_user_password","give_format_inserted_user_password","length","search"],"mappings":";;;;;;;;;;;;;IAAMA,sB;;;;;;;;;2CAEoBC,I,EAAM;AAC1B,UAAMC,UAAU,GAAG,CAACD,IAApB;;AACA,UAAIC,UAAJ,EAAgB;AAAE,eAAOA,UAAP;AAAoB;;AAAA;AAExC;;;4CAEuBC,K,EAAO;AAC1B,UAAMC,WAAW,GAAG,CAACD,KAArB;;AACA,UAAIC,WAAJ,EAAiB;AAAE,eAAOA,WAAP;AAAqB;;AAAA;AAE1C;;;gCAEWD,K,EAAM;AACjB,UAAME,uBAAuB,GAAGF,KAAhC;AACA,UAAMG,kFAAkF,GAAGD,uBAAuB,CAACE,QAAxB,GAAmCC,IAAnC,GAA0CC,WAA1C,EAA3F;AACA,UAAMC,IAAI,GAAGJ,kFAAb;AACA,UAAMK,UAAU,GAAG,6EAAnB;;AACA,UAAI,CAACA,UAAU,CAACC,IAAX,CAAgBF,IAAhB,CAAL,EAA4B;AAAG,eAAOA,IAAP;AAAc;AAC9C;;;+CAI2BG,Q,EAAU;AAClC,UAAMC,cAAc,GAAG,CAACD,QAAxB;;AACA,UAAIC,cAAJ,EAAoB;AAAE,eAAOA,cAAP;AAAwB;;AAAA;AAEhD;;;kDAC6BD,Q,EAAU;AACrC,UAAME,eAAe,GAAGF,QAAQ,CAACN,QAAT,GAAoBC,IAApB,GAA2BC,WAA3B,OAA6C,YAArE;;AACA,UAAIM,eAAJ,EAAsB;AAAE,eAAOA,eAAP;AAAyB;;AAAA;AAEnD;;;0CAEoBC,sB,EAAuB;AACzC,UAAG,CAACA,sBAAJ,EAA2B;AAAE,eAAOA,sBAAP;AAA+B;;AAC5D,UAAMC,0BAA0B,GAAGD,sBAAnC;AACA,UAAME,kCAAkC,GAAGD,0BAA0B,CAACV,QAA3B,GAAsCC,IAAtC,GAA6CC,WAA7C,EAA3C;;AACA,UAAIS,kCAAkC,CAACC,MAAnC,GAA4C,CAAhD,EAAmD;AAAE,eAAOD,kCAAP;AAA4C;;AACjG,UAAIA,kCAAkC,CAACE,MAAnC,CAA0C,OAA1C,MAAuD,CAAC,CAA5D,EAA+D;AAAE,eAAOF,kCAAP;AAA4C;;AAC7G,UAAIA,kCAAkC,CAACE,MAAnC,CAA0C,yCAA1C,MAAyF,CAAC,CAA9F,EAAiG;AAAE,eAAOF,kCAAP;AAA4C;AAElJ;;;;;eAGU,IAAIlB,sBAAJ,E","sourceRoot":"C:\\Users\\Positivo_Computer\\Desktop\\learn-Testing-Travis-Coveralls-Maintainability\\server\\api\\helpers","sourcesContent":["class create_strong_password {\r\n\r\n   check_name_if_is_empty(name) { \r\n      const empty_name = !name\r\n      if (empty_name) { return empty_name; };\r\n\r\n   }\r\n   \r\n   check_email_if_is_empty(email) { \r\n        const empty_email = !email\r\n        if (empty_email) { return empty_email; };\r\n\r\n     }\r\n\r\n     check_email(email){\r\n      const get_inserted_user_email = email;\r\n      const give_format_the_email_user_inserted_before_that_email_goes_in_the_database_to_save = get_inserted_user_email.toString().trim().toLowerCase();\r\n      const mail = give_format_the_email_user_inserted_before_that_email_goes_in_the_database_to_save;\r\n      const real_email = /^(([a-zA-Z0-9\\.-_]{2,6})+)@(([a-zA-Z0-9]{2,6})+).([a-z]{2,6})(.[a-z]{2,6})$/;\r\n      if (!real_email.test(mail)) {  return mail; }\r\n    }\r\n\r\n     \r\n\r\n     check_password_if_is_empty(password) { \r\n        const empty_password = !password\r\n        if (empty_password) { return empty_password; };\r\n\r\n     }\r\n     check_if_this_password_sample(password) { \r\n        const sample_password = password.toString().trim().toLowerCase() === \"qwerty@123\";\r\n        if (sample_password ) { return sample_password; };\r\n\r\n     }\r\n\r\n    check_strong_password(inserted_user_password){\r\n        if(!inserted_user_password){ return inserted_user_password }\r\n        const get_inserted_user_password = inserted_user_password;\r\n        const give_format_inserted_user_password = get_inserted_user_password.toString().trim().toLowerCase();\r\n        if (give_format_inserted_user_password.length < 6) { return give_format_inserted_user_password; }\r\n        if (give_format_inserted_user_password.search(/[0-9]/) === -1) { return give_format_inserted_user_password; }\r\n        if (give_format_inserted_user_password.search(/[!\\@\\#\\$\\%\\&\\*\\~\\`\\:\\\"\"\\''\\'\\\"\\?\\/\\,\\.]/) === -1) { return give_format_inserted_user_password; }\r\n        \r\n    }\r\n} \r\n\r\nexport default new create_strong_password();"]}