{"version":3,"sources":["signupHelper.js"],"names":["Help","firstName","empty_firstName","lastname","empty_lastName","username","empty_userName","email","empty_email","phone","empty_phone","get_inserted_user_email","give_format_the_email_user_inserted_before_that_email_goes_in_the_database_to_save","toString","trim","toLowerCase","mail","real_email","finalCheck","test","password","empty_password","get_inserted_user_password","give_format_inserted_user_password","weak_password","length","search","weak_Name","sample","created","Date","exphelp"],"mappings":";;;;;;;;;;;;;IAAMA,I;;;;;gDACwBC,S,EAAW;AACrC,aAAO,KAAKC,eAAL,GAAuB,CAACD,SAA/B;AACD;;;+CAE0BE,Q,EAAU;AACnC,aAAO,KAAKC,cAAL,GAAsB,CAACD,QAA9B;AACD;;;+CAE0BE,Q,EAAU;AACnC,aAAO,KAAKC,cAAL,GAAsB,CAACD,QAA9B;AACD;;;4CAEuBE,K,EAAO;AAC7B,aAAO,KAAKC,WAAL,GAAmB,CAACD,KAA3B;AACD;;;4CAEuBE,K,EAAO;AAC7B,aAAO,KAAKC,WAAL,GAAmB,CAACD,KAA3B;AACD;;;gCAEWF,K,EAAO;AACjB,UAAMI,uBAAuB,GAAGJ,KAAhC;AACA,UAAMK,kFAAkF,GAAGD,uBAAuB,CAACE,QAAxB,GAAmCC,IAAnC,GAA0CC,WAA1C,EAA3F;AACA,UAAMC,IAAI,GAAGJ,kFAAb;AACA,UAAMK,UAAU,GAAG,6EAAnB;AACA,aAAO,KAAKC,UAAL,GAAmB,CAACD,UAAU,CAACE,IAAX,CAAgBH,IAAhB,CAA3B;AACD;;;+CAE0BI,Q,EAAU;AACnC,aAAO,KAAKC,cAAL,GAAsB,CAACD,QAA9B;AACD;;;0CAEqBA,Q,EAAU;AAC9B,UAAME,0BAA0B,GAAGF,QAAnC;AACA,UAAMG,kCAAkC,GAAGD,0BAA0B,CAACT,QAA3B,GAAsCC,IAAtC,GAA6CC,WAA7C,EAA3C;AACA,aAAO,KAAKS,aAAL,GAAsBD,kCAAkC,CAACE,MAAnC,GAA4C,CAAzE;AACD;;;sDAEiCL,Q,EAAU;AAC1C,UAAME,0BAA0B,GAAGF,QAAnC;AACA,UAAMG,kCAAkC,GAAGD,0BAA0B,CAACT,QAA3B,GAAsCC,IAAtC,GAA6CC,WAA7C,EAA3C;AACA,aAAO,KAAKS,aAAL,GAAsBD,kCAAkC,CAACG,MAAnC,CAA0C,OAA1C,MAAuD,CAAC,CAArF;AACD;;;iEAE4CN,Q,EAAU;AACrD,UAAME,0BAA0B,GAAGF,QAAnC;AACA,UAAMG,kCAAkC,GAAGD,0BAA0B,CAACT,QAA3B,GAAsCC,IAAtC,GAA6CC,WAA7C,EAA3C;AACA,aAAO,KAAKY,SAAL,GAAkBJ,kCAAkC,CAACG,MAAnC,CAA0C,yCAA1C,MAAyF,CAAC,CAAnH;AACD;;;4CAEuBN,Q,EAAU;AAChC,aAAO,KAAKQ,MAAL,GAAcR,QAAQ,CAACP,QAAT,GAAoBC,IAApB,GAA2BC,WAA3B,OAA6C,YAAlE;AACD;;;AAED,kBAAc;AAAA;AACZ,SAAKc,OAAL,GAAe,IAAIC,IAAJ,GAAWjB,QAAX,EAAf;AACD;;;;;AAGH,IAAMkB,OAAO,GAAG,IAAI/B,IAAJ,EAAhB;eACe+B,O","sourceRoot":"C:\\Users\\Positivo_Computer\\Desktop\\broadcast-andela-cycle12\\server\\v1\\api\\helpers","sourcesContent":["class Help {\n  check_firstName_if_is_empty(firstName) {\n    return this.empty_firstName = !firstName;\n  }\n\n  check_lastName_if_is_empty(lastname) {\n    return this.empty_lastName = !lastname;\n  }\n\n  check_userName_if_is_empty(username) {\n    return this.empty_userName = !username;\n  }\n\n  check_email_if_is_empty(email) {\n    return this.empty_email = !email;\n  }\n\n  check_phone_if_is_empty(phone) {\n    return this.empty_phone = !phone;\n  }\n\n  check_email(email) {\n    const get_inserted_user_email = email;\n    const give_format_the_email_user_inserted_before_that_email_goes_in_the_database_to_save = get_inserted_user_email.toString().trim().toLowerCase();\n    const mail = give_format_the_email_user_inserted_before_that_email_goes_in_the_database_to_save;\n    const real_email = /^(([a-zA-Z0-9\\.-_]{2,6})+)@(([a-zA-Z0-9]{2,6})+).([a-z]{2,6})(.[a-z]{2,6})$/;\n    return this.finalCheck = (!real_email.test(mail));\n  }\n\n  check_password_if_is_empty(password) {\n    return this.empty_password = !password;\n  }\n\n  check_length_password(password) {\n    const get_inserted_user_password = password;\n    const give_format_inserted_user_password = get_inserted_user_password.toString().trim().toLowerCase();\n    return this.weak_password = (give_format_inserted_user_password.length < 6);\n  }\n\n  check_if_password_contains_number(password) {\n    const get_inserted_user_password = password;\n    const give_format_inserted_user_password = get_inserted_user_password.toString().trim().toLowerCase();\n    return this.weak_password = (give_format_inserted_user_password.search(/[0-9]/) === -1);\n  }\n\n  check_if_password_contains_special_character(password) {\n    const get_inserted_user_password = password;\n    const give_format_inserted_user_password = get_inserted_user_password.toString().trim().toLowerCase();\n    return this.weak_Name = (give_format_inserted_user_password.search(/[!\\@\\#\\$\\%\\&\\*\\~\\`\\:\\\"\"\\''\\'\\\"\\?\\/\\,\\.]/) === -1);\n  }\n\n  check_if_the_use_sample(password) {\n    return this.sample = password.toString().trim().toLowerCase() === 'qwerty@123';\n  }\n\n  constructor() {\n    this.created = new Date().toString();\n  }\n}\n\nconst exphelp = new Help();\nexport default exphelp;\n"]}