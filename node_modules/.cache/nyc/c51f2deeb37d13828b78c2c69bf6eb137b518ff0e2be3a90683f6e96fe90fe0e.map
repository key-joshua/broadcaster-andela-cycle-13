{"version":3,"sources":["sessionsController.js"],"names":["sessionController","create_session","request","response","newsession","sessionId","sessionDB","length","mentorId","body","menteeId","menteeEmail","email","questions","status","allowed_status","send","message","push","data","view_sessions","accept_session","checksession","find","parseInt","params","sessionid","confirm_session","viewed","indexOf","splice","id","reject_session"],"mappings":"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","sourceRoot":"C:\\Users\\Positivo_Computer\\Desktop\\free_mentors\\server\\api\\controllers","sourcesContent":["import sessionDB from '../models/sessionsDB';\r\n\r\n\r\n\r\n\r\nconst sessionController = {\r\n  //#############################################################################        Working Properly\r\n\r\n  create_session : (request, response)=> {\r\n    \r\n    const newsession = {\r\n        sessionId: sessionDB.length + 1,\r\n        mentorId: request.body.mentorId,\r\n        menteeId: request.body.menteeId,\r\n        menteeEmail: request.body.email,\r\n        questions: request.body.questions,\r\n        status: 'pending'\r\n\r\n      };\r\n\r\n\r\n\r\n        \r\n\r\n      const allowed_status = \"pending\";\r\n\r\n     \r\n  \r\n\r\n     if (newsession.status!==allowed_status) {\r\n        return response.status(400).send({ status: 400, message: `Hey !! allowed initial status is pending` });\r\n      }else if (!request.body.mentorId) {\r\n        return response.status(400).send({ status: 400, message: `Hey !! Insert Mentor's Id` });\r\n      }else if (!request.body.menteeId) {\r\n        return response.status(400).send({ status: 400, message: `Hey !! Insert Your Id` });\r\n      } else if (!request.body.questions) {\r\n        return response.status(400).send({ status: 400, message: `Hey !! Insert decsription of your mentorship session` });\r\n      } else if (request.body.email) {\r\n        return response.status(400).send({ status: 400, message: `Hey !! Insert Your Email` });\r\n      } \r\n    \r\n      sessionDB.push(newsession);\r\n        response.status(201).send({ status: 201, message: `Hey !! you are successfully created Mentorship Session with id ${sessionDB.length + 1} `, data: newsession }); \r\n\r\n        \r\n    \r\n    },\r\n\r\n//#############################################################################       Working Properly\r\n\r\nview_sessions :(request,response)=>{\r\n\r\n    return response.status(200).send({status: 200, message:\"Hey !! Hope you are Viewing all sessions\", data:sessionDB});\r\n\r\n},\r\n\r\n//#############################################################################       Bags Here\r\n\r\naccept_session :(request, response) => {\r\n    const checksession = sessionDB.find((sessionId) => sessionId.sessionId === parseInt(request.params.sessionId, 10));\r\n    const sessionid = request.params.sessionId;\r\n\r\n    if (!checksession) {\r\n      return response.status(404).send({ status: 404, message: `${'Hey !! This session with id' + ' '}${sessionid} ` + 'does not exist' });\r\n    }\r\n\r\n    const confirm_session = {\r\n        sessionId: checksession.sessionId,\r\n        mentorId: request.body.mentorId,\r\n        menteeId: request.body.menteeId,\r\n        questions: request.body.questions,\r\n        menteeEmail: request.body.email,\r\n        status: 'Accepted'\r\n      };\r\n\r\n     const allowed_status = 'Accepted'\r\n\r\n    //   if (request.body.status !== allowed_status) {\r\n    //     return response.status(400).send({ status: 400, message: `Hey !! the status must be in Accepted Mode` });\r\n    //   }\r\n   \r\n\r\n\r\n    // users.push(update_body);\r\n    const viewed = sessionDB.indexOf(checksession);\r\n    sessionDB.splice(viewed, 1, confirm_session);\r\n    return response.status(204).send({ status: 204, message: `Hey !! You are accepted this session with id ${checksession.id} `, data: confirm_session });\r\n  },\r\n\r\n //#############################################################################       Bags Here\r\n \r\n reject_session :(request, response) => {\r\n    const checksession = sessionDB.find((sessionId) => sessionId.sessionId === parseInt(request.params.sessionId, 10));\r\n    const sessionid = request.params.sessionId;\r\n\r\n    if (!checksession) {\r\n      return response.status(404).send({ status: 404, message: `${'Hey !! This session with id' + ' '}${sessionid} ` + 'does not exist' });\r\n    }\r\n\r\n    const confirm_session = {\r\n        sessionId: checksession.sessionId,\r\n        mentorId: request.body.mentorId,\r\n        menteeId: request.body.menteeId,\r\n        questions: request.body.questions,\r\n        menteeEmail: request.body.email,\r\n        status: 'Rejected'\r\n      };\r\n\r\n     const allowed_status = 'Rejected'\r\n\r\n    //   if (request.body.status !== allowed_status) {\r\n    //     return response.status(400).send({ status: 400, message: `Hey !! the status must be in Accepted Mode` });\r\n    //   }\r\n\r\n    const viewed = sessionDB.indexOf(checksession);\r\n    sessionDB.splice(viewed, 1, confirm_session);\r\n    return response.status(204).send({ status: 204, message: `Hey !! You are accepted this session with id ${checksession.id} `, data: confirm_session });\r\n  }\r\n};\r\n\r\nexport default sessionController;"]}