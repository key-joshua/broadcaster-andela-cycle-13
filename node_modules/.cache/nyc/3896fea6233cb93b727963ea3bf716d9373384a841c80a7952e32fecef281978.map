{"version":3,"sources":["additionally.js"],"names":["additionallyController","view_all_review","request","response","reviewDB","status","send","message","data","review_mentor","receive_token_from_header","headers","authorization","decoded_token_in_the_way_to_obtain_user_details","jwt","verify","process","env","SECRET_KEY","find_session_by_id","sessionDB","find","session","sessionId","parseInt","params","choose_firstName_as_detail_to_store","sort__sessions_as_oject_from_sessionDB_where_is_stored_in_array","filter","index","created_at","Date","update_session_from_pending_to_accept","reviewId","length","mentorId","mentorName","menteeId","menteeName","score","body","remark","review_created","push","delete_review","get_object_position_you_need_to_delete_by_id_through_index","indexOf","sort_reviews_as_oject_from_reviewDB_where_is_stored_in_array","splice","change_user_to_mentor","find_user_by_id","users_DB","user","id","userId","choose_category_as_detail_to_store","sort__user_as_oject_from_usersDB_where_is_stored_in_array","keyword","keyword1","keyword2","category","firstName","lastName","email","address","bio","occupation","expertise","password","confirm_password","account_created","account_edited","update_profile","check_renew_email","some","el","update_password","update_passwords","new_password"],"mappings":"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","sourceRoot":"C:\\Users\\Positivo_Computer\\Desktop\\free_mentors\\server\\api\\controllers","sourcesContent":["import sessionDB from '../models/sessionsDB';\r\nimport reviewDB from '../models/reviewDB';\r\nimport users_DB from '../models/usersDB';\r\nimport jwt from 'jsonwebtoken';\r\n\r\nconst additionallyController = {\r\n    \r\nview_all_review :(request,response)=>{\r\n  if (reviewDB){\r\n    return response.status(200).send({status: 200, message:` Hey !! Hope you are retrieving all review `, data:reviewDB }); \r\n  }\r\n  else{\r\n    return response.status(404).send({status: 404, message:  `Hey !! there is no review found `}); \r\n  }\r\n     \r\n  },\r\n\r\nreview_mentor :(request, response) => {\r\n  \r\n    const receive_token_from_header = request.headers.authorization;\r\n    const decoded_token_in_the_way_to_obtain_user_details = jwt.verify(receive_token_from_header, process.env.SECRET_KEY);\r\n    const find_session_by_id = sessionDB.find((session) => session.sessionId === parseInt(request.params.sessionId, 10));\r\n  \r\n      if (!find_session_by_id) {\r\n        return response.status(404).send({ status: 404, message: `Hey ${decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! This session with id ${parseInt(request.params.sessionId, 10)} does not exist` });\r\n    }\r\n\r\n\r\n    \r\n        else if (find_session_by_id) \r\n        {\r\n          const sort__sessions_as_oject_from_sessionDB_where_is_stored_in_array = sessionDB.filter(({sessionId})=> sessionId ===  parseInt(request.params.sessionId, 10));\r\n      \r\n          if (sort__sessions_as_oject_from_sessionDB_where_is_stored_in_array) {\r\n    \r\n            const index = 0;\r\n            const created_at = new Date();\r\n            \r\n            const update_session_from_pending_to_accept = {\r\n            \r\n            \r\n            reviewId : reviewDB.length + 1,\r\n            sessionId : sort__sessions_as_oject_from_sessionDB_where_is_stored_in_array[index].sessionId,\r\n            mentorId : sort__sessions_as_oject_from_sessionDB_where_is_stored_in_array[index].mentorId,\r\n            mentorName : sort__sessions_as_oject_from_sessionDB_where_is_stored_in_array[index].mentorName,\r\n            menteeId : sort__sessions_as_oject_from_sessionDB_where_is_stored_in_array[index].menteeId,\r\n            menteeName : sort__sessions_as_oject_from_sessionDB_where_is_stored_in_array[index].menteeName,\r\n            score : request.body.score,\r\n            remark : request.body.remark,\r\n            review_created : `on ${created_at}`,\r\n          }\r\n\r\n\r\n          if (! request.body.score) {\r\n            return response.status(400).send({status: 200, message:` Hey ${ decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! you must have to score this mentor by using numbers  ` });      \r\n          }\r\n          else if (request.body.score != 1 && request.body.score != 2 && request.body.score != 3 && request.body.score != 4 && request.body.score != 5) {\r\n            return response.status(400).send({status: 200, message:` Hey ${ decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! the score you have to use must range betwenn 1 - 5` });      \r\n          }\r\n\r\n          else if (! request.body.remark) {\r\n            return response.status(400).send({status: 200, message:` Hey ${ decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! you must have to remark this mentor` });      \r\n          }\r\n          else \r\n          {\r\n            reviewDB.push(update_session_from_pending_to_accept);\r\n            return response.status(200).send({status: 200, message:` Hey ${ decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! you are successfully reviewed this mentor ${sort__sessions_as_oject_from_sessionDB_where_is_stored_in_array[index].mentorName} `, data:update_session_from_pending_to_accept });\r\n        }  \r\n      }\r\n    }\r\n  },\r\n\r\ndelete_review :(request, response) => {\r\n  \r\n    const receive_token_from_header = request.headers.authorization;\r\n    const decoded_token_in_the_way_to_obtain_user_details = jwt.verify(receive_token_from_header, process.env.SECRET_KEY);\r\n    const find_session_by_id = reviewDB.find((session) => session.sessionId === parseInt(request.params.sessionId, 10));\r\n    const get_object_position_you_need_to_delete_by_id_through_index = reviewDB.indexOf(find_session_by_id);\r\n    \r\n  \r\n      if (!find_session_by_id) {\r\n        return response.status(404).send({ status: 404, message: `Hey Admin ${decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! This review with id ${parseInt(request.params.sessionId, 10)} does not exist` });\r\n      }\r\n\r\n     \r\n      else if (find_session_by_id) \r\n        {\r\n          const sort_reviews_as_oject_from_reviewDB_where_is_stored_in_array = reviewDB.filter(({sessionId})=> sessionId ===  parseInt(request.params.sessionId, 10));\r\n          if (sort_reviews_as_oject_from_reviewDB_where_is_stored_in_array.length != 0) {\r\n            const index = 0;\r\n            reviewDB.splice(get_object_position_you_need_to_delete_by_id_through_index, 1);\r\n            return response.status(200).send({status: 200, message:` Hey Admin ${ decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! you are successfully deleted this review of Mentee ${sort_reviews_as_oject_from_reviewDB_where_is_stored_in_array[index].menteeName} `})   \r\n      }\r\n    }\r\n  },\r\n\r\nchange_user_to_mentor :(request, response) => {\r\n  \r\n    const receive_token_from_header = request.headers.authorization;\r\n    const decoded_token_in_the_way_to_obtain_user_details = jwt.verify(receive_token_from_header, process.env.SECRET_KEY);\r\n    const find_user_by_id = users_DB.find((user) => user.id === parseInt(request.params.userId, 10));\r\n    const get_object_position_you_need_to_delete_by_id_through_index = users_DB.indexOf(find_user_by_id);\r\n  \r\n      if (!find_user_by_id) {\r\n        return response.status(404).send({ status: 404, message: `Hey ${decoded_token_in_the_way_to_obtain_user_details.choose_category_as_detail_to_store}  ${decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! This person with id ${parseInt(request.params.userId, 10)} does not exist` });\r\n      }\r\n  \r\n      else if (find_user_by_id) \r\n      {\r\n        const sort__user_as_oject_from_usersDB_where_is_stored_in_array = users_DB.filter(({id})=> id ===  parseInt(request.params.userId, 10));\r\n    \r\n        if (sort__user_as_oject_from_usersDB_where_is_stored_in_array.length != 0) {\r\n  \r\n          const index = 0;\r\n          const keyword = 'mentor';\r\n          const keyword1 = 'mentee';\r\n          const keyword2 = 'admin';\r\n          const created_at = new Date();\r\n            const update_session_from_pending_to_accept = {\r\n            id : sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].id,\r\n            category : request.body.category,\r\n            firstName : sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].firstName,\r\n            lastName : sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].lastName,\r\n            email : sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].email,\r\n            address : sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].address,\r\n            bio : sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].bio,\r\n            occupation : sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].occupation,\r\n            expertise : sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].expertise,\r\n            password : sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].password ,\r\n            confirm_password: sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].confirm_password,\r\n            account_created : sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].account_created,\r\n            account_edited : `on ${created_at}`,\r\n          }\r\n          \r\n          if (request.body.category != keyword && request.body.category != keyword1 && request.body.category != keyword2 ) {\r\n            return response.status(400).send({status: 200, message:` Hey ${decoded_token_in_the_way_to_obtain_user_details.choose_category_as_detail_to_store} ${ decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !!  the only keyword you must have to use to update this user is ${keyword},  ${keyword1} or  ${keyword2}   ` });      \r\n          }\r\n          else if (sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].category === keyword && request.body.category === keyword) {\r\n            return response.status(400).send({status: 200, message:` Hey ${decoded_token_in_the_way_to_obtain_user_details.choose_category_as_detail_to_store} ${ decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! this ${sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].firstName} already's ${keyword} since from ${ sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].account_edited} ` });      \r\n          }\r\n          else if (sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].category === keyword1 && request.body.category === keyword1) {\r\n            return response.status(400).send({status: 200, message:` Hey ${decoded_token_in_the_way_to_obtain_user_details.choose_category_as_detail_to_store} ${ decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! this  ${sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].firstName} already's ${keyword} since from ${ sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].account_created} ` });      \r\n          }\r\n          else if (sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].category === keyword2 && request.body.category === keyword2) {\r\n            return response.status(400).send({status: 200, message:` Hey ${decoded_token_in_the_way_to_obtain_user_details.choose_category_as_detail_to_store} ${ decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! this  ${sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].firstName} already's ${keyword} since from ${ sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].account_edited} ` });      \r\n          }\r\n           \r\n          else \r\n          {\r\n            users_DB.splice(get_object_position_you_need_to_delete_by_id_through_index, 1, update_session_from_pending_to_accept);\r\n            return response.status(200).send({status: 200, message:` Hey ${decoded_token_in_the_way_to_obtain_user_details.choose_category_as_detail_to_store} ${ decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! you are successfully changed ${sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].category} ${sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].firstName} to ${request.body.category}`, data:update_session_from_pending_to_accept });\r\n        }  \r\n      }\r\n    }\r\n  },\r\n  \r\nupdate_profile :(request, response) => {\r\n  \r\n    const receive_token_from_header = request.headers.authorization;\r\n    const decoded_token_in_the_way_to_obtain_user_details = jwt.verify(receive_token_from_header, process.env.SECRET_KEY);\r\n    const find_user_by_id = users_DB.find((user) => user.id === parseInt(request.params.userId, 10));\r\n    const get_object_position_you_need_to_delete_by_id_through_index = users_DB.indexOf(find_user_by_id);\r\n  \r\n      if (!find_user_by_id) {\r\n        return response.status(404).send({ status: 404, message: `Hey ${decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! This user with id ${parseInt(request.params.userId, 10)} does not exist` });\r\n      }\r\n  \r\n      else if (find_user_by_id) \r\n      {\r\n        const sort__user_as_oject_from_usersDB_where_is_stored_in_array = users_DB.filter(({id})=> id ===  parseInt(request.params.userId, 10));\r\n    \r\n        if (sort__user_as_oject_from_usersDB_where_is_stored_in_array.length != 0) {\r\n  \r\n          const index = 0;\r\n          const created_at = new Date();\r\n\r\n            const update_session_from_pending_to_accept = {\r\n            id : sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].id,\r\n            category : sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].category,\r\n            firstName : request.body.firstName,\r\n            lastName : request.body.lastName,\r\n            email : request.body.email,\r\n            address : request.body.address,\r\n            bio : request.body.bio,\r\n            occupation : request.body.occupation,\r\n            expertise : request.body.expertise,\r\n            password : request.body.password ,\r\n            account_created : sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].account_created,\r\n            account_edited : `on ${created_at}`,\r\n          }\r\n\r\n      const check_renew_email = users_DB.some((el) => el.email === request.body.email &&  request.body.email != sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].email  );\r\n      if (check_renew_email) {\r\n        return response.status(401).send({ status: 401, message: `Hey ${decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! This Email ${request.body.email} has already exist `});\r\n      }\r\n      else if (!request.body.password ) {\r\n        return response.status(400).send({ status: 400, message: `Hey  ${decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! Insert password to confirm update` });\r\n      }\r\n      else if (sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].password != request.body.password ) {\r\n        return response.status(400).send({ status: 400, message: `Hey  ${decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! the password you entered is not correct` });\r\n      }\r\n      else\r\n      {\r\n            users_DB.splice(get_object_position_you_need_to_delete_by_id_through_index, 1, update_session_from_pending_to_accept);\r\n            return response.status(200).send({status: 200, message:` Hey Admin ${ decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! you are successfully updated your profile` , data:update_session_from_pending_to_accept });\r\n        }  \r\n      }\r\n    }\r\n  },\r\n\r\nupdate_password :(request, response) => {\r\n  \r\n    const receive_token_from_header = request.headers.authorization;\r\n    const decoded_token_in_the_way_to_obtain_user_details = jwt.verify(receive_token_from_header, process.env.SECRET_KEY);\r\n    const find_user_by_id = users_DB.find((user) => user.id === parseInt(request.params.userId, 10));\r\n    const get_object_position_you_need_to_delete_by_id_through_index = users_DB.indexOf(find_user_by_id);\r\n  \r\n      if (!find_user_by_id) {\r\n        return response.status(404).send({ status: 404, message: `Hey ${decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! This user with id ${parseInt(request.params.userId, 10)} does not exist` });\r\n      }\r\n  \r\n      else if (find_user_by_id) \r\n      {\r\n        const sort__user_as_oject_from_usersDB_where_is_stored_in_array = users_DB.filter(({id})=> id ===  parseInt(request.params.userId, 10));\r\n    \r\n        if (sort__user_as_oject_from_usersDB_where_is_stored_in_array.length != 0) {\r\n  \r\n          const index = 0;\r\n          const created_at = new Date();\r\n\r\n            const update_passwords = {\r\n            id : sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].id,\r\n            category : sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].category,\r\n            firstName :sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].firstName,\r\n            lastName : sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].lastName,\r\n            email : sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].email,\r\n            address : sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].address,\r\n            bio : sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].bio,\r\n            occupation : sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].occupation,\r\n            expertise : sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].expertise,\r\n            password : request.body.password ,\r\n            confirm_password: request.body.new_password,\r\n            account_created : sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].account_created,\r\n            account_edited : `on ${created_at}`,\r\n          }\r\n\r\n      const check_renew_email = users_DB.some((el) => el.email === request.body.email &&  request.body.email != sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].email  );\r\n      if (check_renew_email) {\r\n        return response.status(401).send({ status: 401, message: `Hey ${decoded_token_in_the_way_to_obtain_user_details.choose_category_as_detail_to_store}  ${decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! This Email ${request.body.email} has already exist `});\r\n      }\r\n\r\n      else if (!request.body.password) {\r\n        return response.status(400).send({ status: 400, message: `Hey ${decoded_token_in_the_way_to_obtain_user_details.choose_category_as_detail_to_store}  ${decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! Insert new password you want` });\r\n      }\r\n      else if (!request.body.confirm_password ) {\r\n        return response.status(400).send({ status: 400, message: `Hey ${decoded_token_in_the_way_to_obtain_user_details.choose_category_as_detail_to_store}  ${decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! Insert old password to confirm new password` });\r\n      }\r\n      else if ( sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].password != request.body.confirm_password ) {\r\n        return response.status(400).send({ status: 400, message: `Hey ${decoded_token_in_the_way_to_obtain_user_details.choose_category_as_detail_to_store}  ${decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! The old password is incorrect` });\r\n      }\r\n\r\n      else if (sort__user_as_oject_from_usersDB_where_is_stored_in_array[index].password === request.body.password) {\r\n        return response.status(400).send({ status: 400, message: `Hey ${decoded_token_in_the_way_to_obtain_user_details.choose_category_as_detail_to_store}  ${decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! Insert different password you didn't use before` });\r\n      }\r\n\r\n      else\r\n      {\r\n            users_DB.splice(get_object_position_you_need_to_delete_by_id_through_index, 1, update_passwords);\r\n            return response.status(200).send({status: 200, message:` Hey Admin ${ decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! you are successfully updated your profile` , data:update_passwords });\r\n        }  \r\n      }\r\n    }\r\n  },\r\n};\r\nexport default additionallyController;\r\n  "]}