{"version":3,"sources":["usersController.js"],"names":["userController","signup","request","response","created_at","Date","newUser","id","users_DB","length","category","firstName","body","lastName","email","address","bio","occupation","expertise","password","confirm_password","session_created","dotenv","config","choose_email_as_detail_to_store","choose_id_as_detail_to_store","choose_category_as_detail_to_store","choose_firstName_as_detail_to_store","giventoken","jwt","sign","process","env","SECRET_KEY","expiresIn","user_welcome_data_to_display","token","message","insert","some","el","status","json","push","data","signin","receive_user_data_from_body","take_user_email","take_user_password","check_to_signin_user","filter","index","view_all_users","send","View_all_mentee","sort_mentee","data_to_display","x","account_created","account_edited","View_mentee","receive_token_from_header","headers","authorization","decoded_token_in_the_way_to_obtain_user_details","verify","find_mentee_by_id","find","mentee","parseInt","params","menteeId","menteeid","keyword","View_all_mentor","sort_mentors","View_mentor","find_mentor_by_id","mentor","mentorId","mentorid","View_all_admin","sort_admin","View_admin","find_admin_by_id","admin","adminId","adminid","module","exports"],"mappings":";;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,cAAc,GAAG;AAEvBC,EAAAA,MAAM,EAAE,gBAACC,OAAD,EAAUC,QAAV,EAAsB;AAE1B,QAAMC,UAAU,GAAG,IAAIC,IAAJ,EAAnB;AACA,QAAMC,OAAO,GAAG;AACZC,MAAAA,EAAE,EAAEC,oBAASC,MAAT,GAAkB,CADV;AAEZC,MAAAA,QAAQ,EAAE,QAFE;AAGZC,MAAAA,SAAS,EAAET,OAAO,CAACU,IAAR,CAAaD,SAHZ;AAIZE,MAAAA,QAAQ,EAAEX,OAAO,CAACU,IAAR,CAAaC,QAJX;AAKZC,MAAAA,KAAK,EAAEZ,OAAO,CAACU,IAAR,CAAaE,KALR;AAMZC,MAAAA,OAAO,EAAEb,OAAO,CAACU,IAAR,CAAaG,OANV;AAOZC,MAAAA,GAAG,EAAEd,OAAO,CAACU,IAAR,CAAaI,GAPN;AAQZC,MAAAA,UAAU,EAAEf,OAAO,CAACU,IAAR,CAAaK,UARb;AASZC,MAAAA,SAAS,EAAEhB,OAAO,CAACU,IAAR,CAAaM,SATZ;AAUZC,MAAAA,QAAQ,EAAEjB,OAAO,CAACU,IAAR,CAAaO,QAVX;AAWZC,MAAAA,gBAAgB,EAAElB,OAAO,CAACU,IAAR,CAAaQ,gBAXnB;AAYZC,MAAAA,eAAe,eAAQjB,UAAR;AAZH,KAAhB;;AAgBEkB,uBAAOC,MAAP;;AAEA,QAAMC,+BAA+B,GAAGlB,OAAO,CAACQ,KAAhD;AACA,QAAMW,4BAA4B,GAAGjB,oBAASC,MAAT,GAAkB,CAAvD;AACA,QAAMiB,kCAAkC,GAAGpB,OAAO,CAACI,QAAnD;AACA,QAAMiB,mCAAmC,GAAGrB,OAAO,CAACK,SAApD;;AACA,QAAMiB,UAAU,GAAGC,yBAAIC,IAAJ,CAAS;AAACL,MAAAA,4BAA4B,EAA5BA,4BAAD;AAA8BC,MAAAA,kCAAkC,EAAlCA,kCAA9B;AAAiEC,MAAAA,mCAAmC,EAAnCA,mCAAjE;AAAqGH,MAAAA,+BAA+B,EAA/BA;AAArG,KAAT,EAA+IO,OAAO,CAACC,GAAR,CAAYC,UAA3J,EAAsK;AAACC,MAAAA,SAAS,EAAG;AAAb,KAAtK,CAAnB;;AAGA,QAAMC,4BAA4B,GAAC;AACjCC,MAAAA,KAAK,EAACR,UAD2B;AAEjCS,MAAAA,OAAO;AAF0B,KAAnC;;AAQA,QAAMC,MAAM,GAAG9B,oBAAS+B,IAAT,CAAc,UAACC,EAAD;AAAA,aAAQA,EAAE,CAAC1B,KAAH,KAAaU,+BAArB;AAAA,KAAd,CAAf;;AACA,QAAIc,MAAJ,EAAY;AACV,aAAOnC,QAAQ,CAACsC,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAAED,QAAAA,MAAM,EAAE,GAAV;AAAeJ,QAAAA,OAAO,EAAE,UAAG,sBAAsB,GAAzB,SAA+Bb,+BAA/B,SAAoE;AAA5F,OAA1B,CAAP;AACD,KAFD,MAEM,IAAI,CAACG,mCAAL,EAA0C;AAC9C,aAAOxB,QAAQ,CAACsC,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAAED,QAAAA,MAAM,EAAE,GAAV;AAAeJ,QAAAA,OAAO;AAAtB,OAA1B,CAAP;AACD,KAFK,MAEA,IAAI,CAAC/B,OAAO,CAACO,QAAb,EAAuB;AAC3B,aAAOV,QAAQ,CAACsC,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAAED,QAAAA,MAAM,EAAE,GAAV;AAAeJ,QAAAA,OAAO;AAAtB,OAA1B,CAAP;AACD,KAFK,MAEC,IAAI,CAAC/B,OAAO,CAACQ,KAAb,EAAoB;AACzB,aAAOX,QAAQ,CAACsC,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAAED,QAAAA,MAAM,EAAE,GAAV;AAAeJ,QAAAA,OAAO;AAAtB,OAA1B,CAAP;AACD,KAFM,MAEA,IAAI,CAAC/B,OAAO,CAACY,SAAb,EAAwB;AAC7B,aAAOf,QAAQ,CAACsC,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAAED,QAAAA,MAAM,EAAE,GAAV;AAAeJ,QAAAA,OAAO;AAAtB,OAA1B,CAAP;AACD,KAFM,MAEA,IAAI,CAAC/B,OAAO,CAACa,QAAb,EAAuB;AAC5B,aAAOhB,QAAQ,CAACsC,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAAED,QAAAA,MAAM,EAAE,GAAV;AAAeJ,QAAAA,OAAO;AAAtB,OAA1B,CAAP;AACD,KAFM,MAEA,IAAI/B,OAAO,CAACa,QAAR,IAAoBb,OAAO,CAACc,gBAAhC,EAAkD;AACvD,aAAOjB,QAAQ,CAACsC,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAAED,QAAAA,MAAM,EAAE,GAAV;AAAeJ,QAAAA,OAAO;AAAtB,OAA1B,CAAP;AACD;;AAED7B,wBAASmC,IAAT,CAAcrC,OAAd;;AACAH,IAAAA,QAAQ,CAACsC,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAAED,MAAAA,MAAM,EAAE,GAAV;AAAeJ,MAAAA,OAAO,EAAE,UAAG,SAAS,GAAZ,SAAkBV,mCAAlB,WAA6D,oCAArF;AAA2HiB,MAAAA,IAAI,EAAET;AAAjI,KAA1B;AAIH,GA5DoB;AA8DvBU,EAAAA,MAAM,EAAE,gBAAC3C,OAAD,EAAUC,QAAV,EAAsB;AAE1B,QAAM2C,2BAA2B,GAAG;AAClChC,MAAAA,KAAK,EAAEZ,OAAO,CAACU,IAAR,CAAaE,KADc;AAElCK,MAAAA,QAAQ,EAAEjB,OAAO,CAACU,IAAR,CAAaO;AAFW,KAApC;AAKA,QAAM4B,eAAe,GAAGD,2BAA2B,CAAChC,KAApD;AACA,QAAMkC,kBAAkB,GAAGF,2BAA2B,CAAC3B,QAAvD;;AAEC,QAAI,CAAC4B,eAAL,EAAsB;AACnB,aAAO5C,QAAQ,CAACsC,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAAED,QAAAA,MAAM,EAAE,GAAV;AAAeJ,QAAAA,OAAO;AAAtB,OAA1B,CAAP;AACD,KAFF,MAIM,IAAI,CAACW,kBAAL,EAAyB;AAC5B,aAAO7C,QAAQ,CAACsC,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAAED,QAAAA,MAAM,EAAE,GAAV;AAAeJ,QAAAA,OAAO;AAAtB,OAA1B,CAAP;AACD;;AAED,QAAMY,oBAAoB,GAAGzC,oBAAS0C,MAAT,CAAgB;AAAA,UAAEpC,KAAF,QAAEA,KAAF;AAAA,UAASK,QAAT,QAASA,QAAT;AAAA,aAAsBL,KAAK,KAAKiC,eAAV,IAA6B5B,QAAQ,KAAK6B,kBAAhE;AAAA,KAAhB,CAA7B;;AAGA,QAAIC,oBAAoB,CAACxC,MAArB,IAA+B,CAAnC,EAAsC;AAEpC,WAAK,IAAI0C,KAAK,GAAC,CAAf,EAAkBA,KAAK,GAAGF,oBAAoB,CAACxC,MAA/C,EAAuD0C,KAAK,EAA5D,EACA;AAEE7B,2BAAOC,MAAP;;AACA,YAAME,4BAA4B,GAAGwB,oBAAoB,CAACE,KAAD,CAApB,CAA4B5C,EAAjE;AACA,YAAMiB,+BAA+B,GAAGyB,oBAAoB,CAACE,KAAD,CAApB,CAA4BrC,KAApE;AACA,YAAMY,kCAAkC,GAAGuB,oBAAoB,CAACE,KAAD,CAApB,CAA4BzC,QAAvE;AACA,YAAMiB,mCAAmC,GAAGsB,oBAAoB,CAACE,KAAD,CAApB,CAA4BxC,SAAxE;;AACA,YAAMiB,UAAU,GAAGC,yBAAIC,IAAJ,CAAS;AAACL,UAAAA,4BAA4B,EAA5BA,4BAAD;AAA8BC,UAAAA,kCAAkC,EAAlCA,kCAA9B;AAAiEC,UAAAA,mCAAmC,EAAnCA,mCAAjE;AAAqGH,UAAAA,+BAA+B,EAA/BA;AAArG,SAAT,EAA+IO,OAAO,CAACC,GAAR,CAAYC,UAA3J,EAAsK;AAACC,UAAAA,SAAS,EAAC;AAAX,SAAtK,CAAnB;;AAEA,YAAMC,4BAA4B,GAClC;AACEC,UAAAA,KAAK,EAACR;AADR,SADA;AAKAzB,QAAAA,QAAQ,CAACsC,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AACxBD,UAAAA,MAAM,EAAE,GADgB;AAExBJ,UAAAA,OAAO,gBAASY,oBAAoB,CAACE,KAAD,CAApB,CAA4BzC,QAArC,cAAiDuC,oBAAoB,CAACE,KAAD,CAApB,CAA4BxC,SAA7E,uCAFiB;AAGxBiC,UAAAA,IAAI,EAACT;AAHmB,SAA1B;AAKD;AAEA,KAxBH,MA0BI;AACF,aAAOhC,QAAQ,CAACsC,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAACD,QAAAA,MAAM,EAAE,GAAT;AAAcJ,QAAAA,OAAO,EAAC;AAAtB,OAA1B,CAAP;AAED;AAMJ,GAtHoB;AAwHrBe,EAAAA,cAAc,EAAE,wBAAClD,OAAD,EAAUC,QAAV,EAAuB;AACrC;AACA,WAAOA,QAAQ,CAACsC,MAAT,CAAgB,GAAhB,EAAqBY,IAArB,CAA0B;AAAEZ,MAAAA,MAAM,EAAE,GAAV;AAAeJ,MAAAA,OAAO,EAAE,4CAAxB;AAAsEO,MAAAA,IAAI,EAAEpC;AAA5E,KAA1B,CAAP;AACD,GA3HoB;AA6HrB8C,EAAAA,eAAe,EAAE,yBAACpD,OAAD,EAAUC,QAAV,EAAuB;AACtC,QAAMoD,WAAW,GAAG/C,oBAAS0C,MAAT,CAAgB;AAAA,UAAGxC,QAAH,SAAGA,QAAH;AAAA,aAAkBA,QAAQ,KAAK,QAA/B;AAAA,KAAhB,CAApB;;AAEF,QAAI6C,WAAJ,EAAiB;AACnB,UAAMC,eAAe,GAAC,EAAtB;;AACI,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACF,WAAW,CAAC9C,MAA5B,EAAoCgD,CAAC,EAArC,EAAyC;AAErCD,QAAAA,eAAe,CAACb,IAAhB,CAAsB;AACpBpC,UAAAA,EAAE,EAAEgD,WAAW,CAACE,CAAD,CAAX,CAAelD,EADC;AAEpBG,UAAAA,QAAQ,EAAE6C,WAAW,CAACE,CAAD,CAAX,CAAe/C,QAFL;AAGpBC,UAAAA,SAAS,EAAC4C,WAAW,CAACE,CAAD,CAAX,CAAe9C,SAHL;AAIpBE,UAAAA,QAAQ,EAAC0C,WAAW,CAACE,CAAD,CAAX,CAAe5C,QAJJ;AAKpBC,UAAAA,KAAK,EAAEyC,WAAW,CAACE,CAAD,CAAX,CAAe3C,KALF;AAMpBC,UAAAA,OAAO,EAACwC,WAAW,CAACE,CAAD,CAAX,CAAe1C,OANH;AAOpBC,UAAAA,GAAG,EAAEuC,WAAW,CAACE,CAAD,CAAX,CAAezC,GAPA;AAQpBC,UAAAA,UAAU,EAAEsC,WAAW,CAACE,CAAD,CAAX,CAAexC,UARP;AASpBC,UAAAA,SAAS,EAAEqC,WAAW,CAACE,CAAD,CAAX,CAAevC,SATN;AAUpBwC,UAAAA,eAAe,EAAGH,WAAW,CAACE,CAAD,CAAX,CAAeC,eAVb;AAWpBC,UAAAA,cAAc,EAAGJ,WAAW,CAACE,CAAD,CAAX,CAAeE;AAXZ,SAAtB;AAaH;;AACD,aAAOxD,QAAQ,CAACsC,MAAT,CAAgB,GAAhB,EAAqBY,IAArB,CAA0B;AAACZ,QAAAA,MAAM,EAAE,GAAT;AAAcJ,QAAAA,OAAO,EAAC,+CAAtB;AAAuEO,QAAAA,IAAI,EAACY;AAA5E,OAA1B,CAAP;AACD;AACF,GApJsB;AAsJvBI,EAAAA,WAAW,EAAE,qBAAC1D,OAAD,EAASC,QAAT,EAAoB;AAC/B,QAAM0D,yBAAyB,GAAG3D,OAAO,CAAC4D,OAAR,CAAgBC,aAAlD;;AACA,QAAMC,+CAA+C,GAAGnC,yBAAIoC,MAAJ,CAAWJ,yBAAX,EAAsC9B,OAAO,CAACC,GAAR,CAAYC,UAAlD,CAAxD;;AACA,QAAMiC,iBAAiB,GAAG1D,oBAAS2D,IAAT,CAAc,UAACC,MAAD;AAAA,aAAYA,MAAM,CAAC7D,EAAP,KAAc8D,QAAQ,CAACnE,OAAO,CAACoE,MAAR,CAAeC,QAAhB,EAA0B,EAA1B,CAAlC;AAAA,KAAd,CAA1B;;AACA,QAAMC,QAAQ,GAAGH,QAAQ,CAACnE,OAAO,CAACoE,MAAR,CAAeC,QAAhB,EAA0B,EAA1B,CAAzB;;AAEE,QAAI,CAACL,iBAAL,EAAwB;AACtB,aAAO/D,QAAQ,CAACsC,MAAT,CAAgB,GAAhB,EAAqBY,IAArB,CAA0B;AAAEZ,QAAAA,MAAM,EAAE,GAAV;AAAeJ,QAAAA,OAAO,gBAAS2B,+CAA+C,CAACtC,kCAAzD,cAA+FsC,+CAA+C,CAACrC,mCAA/I,qCAA6M6C,QAA7M;AAAtB,OAA1B,CAAP;AAED,KAHD,MAMG;AACH,UAAMC,OAAO,WAAb;;AACA,UAAMlB,WAAW,GAAG/C,oBAAS0C,MAAT,CAAgB;AAAA,YAAExC,QAAF,SAAEA,QAAF;AAAA,YAAYH,EAAZ,SAAYA,EAAZ;AAAA,eAAmBG,QAAQ,KAAK+D,OAAb,IAAwBlE,EAAE,KAAKiE,QAAlD;AAAA,OAAhB,CAApB;;AAEA,UAAIjB,WAAW,CAAC9C,MAAZ,IAAsB,CAA1B,EAA6B;AAC3B,YAAMgD,CAAC,GAAG,CAAV;AACA,YAAMD,eAAe,GAAG;AAClBjD,UAAAA,EAAE,EAAEgD,WAAW,CAACE,CAAD,CAAX,CAAelD,EADD;AAElBG,UAAAA,QAAQ,EAAE6C,WAAW,CAACE,CAAD,CAAX,CAAe/C,QAFP;AAGlBC,UAAAA,SAAS,EAAC4C,WAAW,CAACE,CAAD,CAAX,CAAe9C,SAHP;AAIlBE,UAAAA,QAAQ,EAAC0C,WAAW,CAACE,CAAD,CAAX,CAAe5C,QAJN;AAKlBC,UAAAA,KAAK,EAAEyC,WAAW,CAACE,CAAD,CAAX,CAAe3C,KALJ;AAMlBC,UAAAA,OAAO,EAACwC,WAAW,CAACE,CAAD,CAAX,CAAe1C,OANL;AAOlBC,UAAAA,GAAG,EAAEuC,WAAW,CAACE,CAAD,CAAX,CAAezC,GAPF;AAQlBC,UAAAA,UAAU,EAAEsC,WAAW,CAACE,CAAD,CAAX,CAAexC,UART;AASlBC,UAAAA,SAAS,EAAEqC,WAAW,CAACE,CAAD,CAAX,CAAevC,SATR;AAUlBwC,UAAAA,eAAe,EAAGH,WAAW,CAACE,CAAD,CAAX,CAAeC,eAVf;AAWlBC,UAAAA,cAAc,EAAGJ,WAAW,CAACE,CAAD,CAAX,CAAeE;AAXd,SAAxB;AAaA,eAAOxD,QAAQ,CAACsC,MAAT,CAAgB,GAAhB,EAAqBY,IAArB,CAA0B;AAACZ,UAAAA,MAAM,EAAE,GAAT;AAAcJ,UAAAA,OAAO,gBAAQ2B,+CAA+C,CAACtC,kCAAxD,cAA+FsC,+CAA+C,CAACrC,mCAA/I,yCAAiN4B,WAAW,CAACE,CAAD,CAAX,CAAe/C,QAAhO,cAA4O6C,WAAW,CAACE,CAAD,CAAX,CAAe9C,SAA3P,UAArB;AAAkSiC,UAAAA,IAAI,EAACY;AAAvS,SAA1B,CAAP;AAED,OAjBD,MAkBI;AACF,eAAOrD,QAAQ,CAACsC,MAAT,CAAgB,GAAhB,EAAqBY,IAArB,CAA0B;AAACZ,UAAAA,MAAM,EAAE,GAAT;AAAcJ,UAAAA,OAAO,iBAAS2B,+CAA+C,CAACtC,kCAAzD,cAA+FsC,+CAA+C,CAACrC,mCAA/I,sBAA8L8C,OAA9L,sBAAiND,QAAjN;AAArB,SAA1B,CAAP;AACD;AACF;AACF,GA5LsB;AA8LrBE,EAAAA,eAAe,EAAE,yBAACxE,OAAD,EAAUC,QAAV,EAAuB;AACtC,QAAMwE,YAAY,GAAGnE,oBAAS0C,MAAT,CAAgB;AAAA,UAAGxC,QAAH,SAAGA,QAAH;AAAA,aAAkBA,QAAQ,KAAK,QAA/B;AAAA,KAAhB,CAArB;;AAEA,QAAIiE,YAAJ,EAAkB;AACtB,UAAMnB,eAAe,GAAC,EAAtB;;AACI,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACkB,YAAY,CAAClE,MAA7B,EAAqCgD,CAAC,EAAtC,EAA0C;AAEtCD,QAAAA,eAAe,CAACb,IAAhB,CAAsB;AACpBpC,UAAAA,EAAE,EAAEoE,YAAY,CAAClB,CAAD,CAAZ,CAAgBlD,EADA;AAEpBG,UAAAA,QAAQ,EAAEiE,YAAY,CAAClB,CAAD,CAAZ,CAAgB/C,QAFN;AAGpBC,UAAAA,SAAS,EAACgE,YAAY,CAAClB,CAAD,CAAZ,CAAgB9C,SAHN;AAIpBE,UAAAA,QAAQ,EAAC8D,YAAY,CAAClB,CAAD,CAAZ,CAAgB5C,QAJL;AAKpBC,UAAAA,KAAK,EAAE6D,YAAY,CAAClB,CAAD,CAAZ,CAAgB3C,KALH;AAMpBC,UAAAA,OAAO,EAAC4D,YAAY,CAAClB,CAAD,CAAZ,CAAgB1C,OANJ;AAOpBC,UAAAA,GAAG,EAAE2D,YAAY,CAAClB,CAAD,CAAZ,CAAgBzC,GAPD;AAQpBC,UAAAA,UAAU,EAAE0D,YAAY,CAAClB,CAAD,CAAZ,CAAgBxC,UARR;AASpBC,UAAAA,SAAS,EAAEyD,YAAY,CAAClB,CAAD,CAAZ,CAAgBvC,SATP;AAUpBwC,UAAAA,eAAe,EAAGiB,YAAY,CAAClB,CAAD,CAAZ,CAAgBC,eAVd;AAWpBC,UAAAA,cAAc,EAAGgB,YAAY,CAAClB,CAAD,CAAZ,CAAgBE;AAXb,SAAtB;AAaH;;AACD,aAAOxD,QAAQ,CAACsC,MAAT,CAAgB,GAAhB,EAAqBY,IAArB,CAA0B;AAACZ,QAAAA,MAAM,EAAE,GAAT;AAAcJ,QAAAA,OAAO,EAAC,gDAAtB;AAAwEO,QAAAA,IAAI,EAACY;AAA7E,OAA1B,CAAP;AACC;AACF,GArNoB;AAuNvBoB,EAAAA,WAAW,EAAE,qBAAC1E,OAAD,EAASC,QAAT,EAAoB;AAE/B,QAAM0D,yBAAyB,GAAG3D,OAAO,CAAC4D,OAAR,CAAgBC,aAAlD;;AACA,QAAMC,+CAA+C,GAAGnC,yBAAIoC,MAAJ,CAAWJ,yBAAX,EAAsC9B,OAAO,CAACC,GAAR,CAAYC,UAAlD,CAAxD;;AACA,QAAM4C,iBAAiB,GAAGrE,oBAAS2D,IAAT,CAAc,UAACW,MAAD;AAAA,aAAYA,MAAM,CAACvE,EAAP,KAAc8D,QAAQ,CAACnE,OAAO,CAACoE,MAAR,CAAeS,QAAhB,EAA0B,EAA1B,CAAlC;AAAA,KAAd,CAA1B;;AACA,QAAMC,QAAQ,GAAGX,QAAQ,CAACnE,OAAO,CAACoE,MAAR,CAAeS,QAAhB,EAA0B,EAA1B,CAAzB;;AAEE,QAAI,CAACF,iBAAL,EAAwB;AACtB,aAAO1E,QAAQ,CAACsC,MAAT,CAAgB,GAAhB,EAAqBY,IAArB,CAA0B;AAAEZ,QAAAA,MAAM,EAAE,GAAV;AAAeJ,QAAAA,OAAO,gBAAS2B,+CAA+C,CAACtC,kCAAzD,cAA+FsC,+CAA+C,CAACrC,mCAA/I,qCAA6MqD,QAA7M;AAAtB,OAA1B,CAAP;AAED,KAHD,MAMG;AACH,UAAMP,OAAO,WAAb;;AACA,UAAME,YAAY,GAAGnE,oBAAS0C,MAAT,CAAgB;AAAA,YAAExC,QAAF,SAAEA,QAAF;AAAA,YAAYH,EAAZ,SAAYA,EAAZ;AAAA,eAAmBG,QAAQ,KAAK+D,OAAb,IAAwBlE,EAAE,KAAKyE,QAAlD;AAAA,OAAhB,CAArB;;AAEA,UAAIL,YAAY,CAAClE,MAAb,IAAuB,CAA3B,EAA8B;AAC5B,YAAMgD,CAAC,GAAG,CAAV;AACA,YAAMD,eAAe,GAAG;AAClBjD,UAAAA,EAAE,EAAEoE,YAAY,CAAClB,CAAD,CAAZ,CAAgBlD,EADF;AAElBG,UAAAA,QAAQ,EAAEiE,YAAY,CAAClB,CAAD,CAAZ,CAAgB/C,QAFR;AAGlBC,UAAAA,SAAS,EAACgE,YAAY,CAAClB,CAAD,CAAZ,CAAgB9C,SAHR;AAIlBE,UAAAA,QAAQ,EAAC8D,YAAY,CAAClB,CAAD,CAAZ,CAAgB5C,QAJP;AAKlBC,UAAAA,KAAK,EAAE6D,YAAY,CAAClB,CAAD,CAAZ,CAAgB3C,KALL;AAMlBC,UAAAA,OAAO,EAAC4D,YAAY,CAAClB,CAAD,CAAZ,CAAgB1C,OANN;AAOlBC,UAAAA,GAAG,EAAE2D,YAAY,CAAClB,CAAD,CAAZ,CAAgBzC,GAPH;AAQlBC,UAAAA,UAAU,EAAE0D,YAAY,CAAClB,CAAD,CAAZ,CAAgBxC,UARV;AASlBC,UAAAA,SAAS,EAAEyD,YAAY,CAAClB,CAAD,CAAZ,CAAgBvC,SATT;AAUlBwC,UAAAA,eAAe,EAAGiB,YAAY,CAAClB,CAAD,CAAZ,CAAgBC,eAVhB;AAWlBC,UAAAA,cAAc,EAAGgB,YAAY,CAAClB,CAAD,CAAZ,CAAgBE;AAXf,SAAxB;AAaA,eAAOxD,QAAQ,CAACsC,MAAT,CAAgB,GAAhB,EAAqBY,IAArB,CAA0B;AAACZ,UAAAA,MAAM,EAAE,GAAT;AAAcJ,UAAAA,OAAO,gBAAQ2B,+CAA+C,CAACtC,kCAAxD,cAA+FsC,+CAA+C,CAACrC,mCAA/I,yCAAiNgD,YAAY,CAAClB,CAAD,CAAZ,CAAgB/C,QAAjO,cAA6OiE,YAAY,CAAClB,CAAD,CAAZ,CAAgB9C,SAA7P,UAArB;AAAoSiC,UAAAA,IAAI,EAACY;AAAzS,SAA1B,CAAP;AAED,OAjBD,MAkBI;AACF,eAAOrD,QAAQ,CAACsC,MAAT,CAAgB,GAAhB,EAAqBY,IAArB,CAA0B;AAACZ,UAAAA,MAAM,EAAE,GAAT;AAAcJ,UAAAA,OAAO,iBAAS2B,+CAA+C,CAACtC,kCAAzD,cAA+FsC,+CAA+C,CAACrC,mCAA/I,sBAA8L8C,OAA9L,sBAAiNO,QAAjN;AAArB,SAA1B,CAAP;AACD;AACF;AACF,GA9PsB;AAgQvBC,EAAAA,cAAc,EAAE,wBAAC/E,OAAD,EAASC,QAAT,EAAoB;AAClC,QAAM+E,UAAU,GAAG1E,oBAAS0C,MAAT,CAAgB;AAAA,UAAExC,QAAF,SAAEA,QAAF;AAAA,aAAeA,QAAQ,KAAK,OAA5B;AAAA,KAAhB,CAAnB;;AAEA,QAAIwE,UAAJ,EAAgB;AAClB,UAAM1B,eAAe,GAAC,EAAtB;;AACI,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACyB,UAAU,CAACzE,MAA3B,EAAmCgD,CAAC,EAApC,EAAwC;AAEpCD,QAAAA,eAAe,CAACb,IAAhB,CAAsB;AACpBpC,UAAAA,EAAE,EAAE2E,UAAU,CAACzB,CAAD,CAAV,CAAclD,EADE;AAEpBG,UAAAA,QAAQ,EAAEwE,UAAU,CAACzB,CAAD,CAAV,CAAc/C,QAFJ;AAGpBC,UAAAA,SAAS,EAACuE,UAAU,CAACzB,CAAD,CAAV,CAAc9C,SAHJ;AAIpBE,UAAAA,QAAQ,EAACqE,UAAU,CAACzB,CAAD,CAAV,CAAc5C,QAJH;AAKpBC,UAAAA,KAAK,EAAEoE,UAAU,CAACzB,CAAD,CAAV,CAAc3C,KALD;AAMpBC,UAAAA,OAAO,EAACmE,UAAU,CAACzB,CAAD,CAAV,CAAc1C,OANF;AAOpBC,UAAAA,GAAG,EAAEkE,UAAU,CAACzB,CAAD,CAAV,CAAczC,GAPC;AAQpBC,UAAAA,UAAU,EAAEiE,UAAU,CAACzB,CAAD,CAAV,CAAcxC,UARN;AASpBC,UAAAA,SAAS,EAAEgE,UAAU,CAACzB,CAAD,CAAV,CAAcvC,SATL;AAUpBwC,UAAAA,eAAe,EAAGwB,UAAU,CAACzB,CAAD,CAAV,CAAcC,eAVZ;AAWpBC,UAAAA,cAAc,EAAGuB,UAAU,CAACzB,CAAD,CAAV,CAAcE;AAXX,SAAtB;AAaH;;AACD,aAAOxD,QAAQ,CAACsC,MAAT,CAAgB,GAAhB,EAAqBY,IAArB,CAA0B;AAACZ,QAAAA,MAAM,EAAE,GAAT;AAAcJ,QAAAA,OAAO,EAAC,8CAAtB;AAAsEO,QAAAA,IAAI,EAACY;AAA3E,OAA1B,CAAP;AACD;AACF,GAvRsB;AAyRvB2B,EAAAA,UAAU,EAAE,oBAACjF,OAAD,EAASC,QAAT,EAAoB;AAE9B,QAAM0D,yBAAyB,GAAG3D,OAAO,CAAC4D,OAAR,CAAgBC,aAAlD;;AACA,QAAMC,+CAA+C,GAAGnC,yBAAIoC,MAAJ,CAAWJ,yBAAX,EAAsC9B,OAAO,CAACC,GAAR,CAAYC,UAAlD,CAAxD;;AACA,QAAMmD,gBAAgB,GAAG5E,oBAAS2D,IAAT,CAAc,UAACkB,KAAD;AAAA,aAAWA,KAAK,CAAC9E,EAAN,KAAa8D,QAAQ,CAACnE,OAAO,CAACoE,MAAR,CAAegB,OAAhB,EAAyB,EAAzB,CAAhC;AAAA,KAAd,CAAzB;;AACA,QAAMC,OAAO,GAAGlB,QAAQ,CAACnE,OAAO,CAACoE,MAAR,CAAegB,OAAhB,EAAyB,EAAzB,CAAxB;;AAEE,QAAI,CAACF,gBAAL,EAAuB;AACrB,aAAOjF,QAAQ,CAACsC,MAAT,CAAgB,GAAhB,EAAqBY,IAArB,CAA0B;AAAEZ,QAAAA,MAAM,EAAE,GAAV;AAAeJ,QAAAA,OAAO,gBAAS2B,+CAA+C,CAACtC,kCAAzD,cAA+FsC,+CAA+C,CAACrC,mCAA/I,oCAA4M4D,OAA5M;AAAtB,OAA1B,CAAP;AAED,KAHD,MAMG;AACH,UAAMd,OAAO,UAAb;;AACA,UAAMS,UAAU,GAAG1E,oBAAS0C,MAAT,CAAgB;AAAA,YAAExC,QAAF,SAAEA,QAAF;AAAA,YAAYH,EAAZ,SAAYA,EAAZ;AAAA,eAAmBG,QAAQ,KAAK+D,OAAb,IAAwBlE,EAAE,KAAKgF,OAAlD;AAAA,OAAhB,CAAnB;;AAEA,UAAIL,UAAU,CAACzE,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,YAAMgD,CAAC,GAAG,CAAV;AACA,YAAMD,eAAe,GAAG;AACtBjD,UAAAA,EAAE,EAAE2E,UAAU,CAACzB,CAAD,CAAV,CAAclD,EADI;AAEtBG,UAAAA,QAAQ,EAAEwE,UAAU,CAACzB,CAAD,CAAV,CAAc/C,QAFF;AAGtBC,UAAAA,SAAS,EAACuE,UAAU,CAACzB,CAAD,CAAV,CAAc9C,SAHF;AAItBE,UAAAA,QAAQ,EAACqE,UAAU,CAACzB,CAAD,CAAV,CAAc5C,QAJD;AAKtBC,UAAAA,KAAK,EAAEoE,UAAU,CAACzB,CAAD,CAAV,CAAc3C,KALC;AAMtBC,UAAAA,OAAO,EAACmE,UAAU,CAACzB,CAAD,CAAV,CAAc1C,OANA;AAOtBC,UAAAA,GAAG,EAAEkE,UAAU,CAACzB,CAAD,CAAV,CAAczC,GAPG;AAQtBC,UAAAA,UAAU,EAAEiE,UAAU,CAACzB,CAAD,CAAV,CAAcxC,UARJ;AAStBC,UAAAA,SAAS,EAAEgE,UAAU,CAACzB,CAAD,CAAV,CAAcvC,SATH;AAUtBwC,UAAAA,eAAe,EAAGwB,UAAU,CAACzB,CAAD,CAAV,CAAcC,eAVV;AAWtBC,UAAAA,cAAc,EAAGuB,UAAU,CAACzB,CAAD,CAAV,CAAcE;AAXT,SAAxB;AAaA,eAAOxD,QAAQ,CAACsC,MAAT,CAAgB,GAAhB,EAAqBY,IAArB,CAA0B;AAACZ,UAAAA,MAAM,EAAE,GAAT;AAAcJ,UAAAA,OAAO,gBAAQ2B,+CAA+C,CAACtC,kCAAxD,cAA+FsC,+CAA+C,CAACrC,mCAA/I,yCAAiNuD,UAAU,CAACzB,CAAD,CAAV,CAAc/C,QAA/N,cAA2OwE,UAAU,CAACzB,CAAD,CAAV,CAAc9C,SAAzP,UAArB;AAAgSiC,UAAAA,IAAI,EAACY;AAArS,SAA1B,CAAP;AAED,OAjBD,MAkBI;AACF,eAAOrD,QAAQ,CAACsC,MAAT,CAAgB,GAAhB,EAAqBY,IAArB,CAA0B;AAACZ,UAAAA,MAAM,EAAE,GAAT;AAAcJ,UAAAA,OAAO,iBAAS2B,+CAA+C,CAACtC,kCAAzD,cAA+FsC,+CAA+C,CAACrC,mCAA/I,sBAA8L8C,OAA9L,sBAAiNc,OAAjN;AAArB,SAA1B,CAAP;AACD;AACF;AACF;AAhUsB,CAAvB;AAoUEC,MAAM,CAACC,OAAP,GAAiBzF,cAAjB","sourceRoot":"C:\\Users\\Positivo_Computer\\Desktop\\free_mentors\\server\\api\\controllers","sourcesContent":["import users_DB from '../models/usersDB';\r\nimport jwt from 'jsonwebtoken';\r\nimport dotenv from 'dotenv';\r\n\r\nconst userController = {\r\n  \r\nsignup: (request, response)=> {\r\n\r\n    const created_at = new Date(); \r\n    const newUser = {\r\n        id: users_DB.length + 1,\r\n        category: 'mentee',\r\n        firstName: request.body.firstName,\r\n        lastName: request.body.lastName,\r\n        email: request.body.email,\r\n        address: request.body.address,\r\n        bio: request.body.bio,\r\n        occupation: request.body.occupation,\r\n        expertise: request.body.expertise,\r\n        password: request.body.password,\r\n        confirm_password: request.body.confirm_password,\r\n        session_created: `on ${created_at}`,\r\n\r\n      };\r\n\r\n      dotenv.config();\r\n      \r\n      const choose_email_as_detail_to_store = newUser.email;\r\n      const choose_id_as_detail_to_store = users_DB.length + 1;\r\n      const choose_category_as_detail_to_store = newUser.category;\r\n      const choose_firstName_as_detail_to_store = newUser.firstName;\r\n      const giventoken = jwt.sign({choose_id_as_detail_to_store,choose_category_as_detail_to_store,choose_firstName_as_detail_to_store,choose_email_as_detail_to_store},process.env.SECRET_KEY,{expiresIn : '24000h'});\r\n \r\n\r\n      const user_welcome_data_to_display={\r\n        token:giventoken,\r\n        message: `Successfully created account`,\r\n     };\r\n\r\n\r\n     \r\n    \r\n      const insert = users_DB.some((el) => el.email === choose_email_as_detail_to_store );\r\n      if (insert) {\r\n        return response.status(401).json({ status: 401, message: `${'Hey !! This Email' + ' '}${choose_email_as_detail_to_store} ` + 'has already exist' });\r\n      }else if (!choose_firstName_as_detail_to_store) {\r\n        return response.status(400).json({ status: 400, message: `Hey !! Insert firstname` });\r\n      }else if (!newUser.lastName) {\r\n        return response.status(400).json({ status: 400, message: `Hey !! Insert lastname` });\r\n      } else if (!newUser.email) {\r\n        return response.status(400).json({ status: 400, message: `Hey !! Insert email` });\r\n      } else if (!newUser.expertise) {\r\n        return response.status(400).json({ status: 400, message: `Hey !! select what expertise` });\r\n      } else if (!newUser.password) {\r\n        return response.status(400).json({ status: 400, message: `Hey !! Insert password` });\r\n      } else if (newUser.password != newUser.confirm_password) {\r\n        return response.status(400).json({ status: 400, message: `Hey !! Insert same password to confirm password` });\r\n      } \r\n    \r\n      users_DB.push(newUser);\r\n      response.status(201).json({ status: 201, message: `${'Hey ' + ' '}${choose_firstName_as_detail_to_store} !!` + ' you  successfully created account', data: user_welcome_data_to_display }); \r\n\r\n        \r\n    \r\n  },\r\n\r\nsignin: (request, response)=> {\r\n\r\n    const receive_user_data_from_body = {\r\n      email: request.body.email,\r\n      password: request.body.password,  \r\n      };\r\n  \r\n    const take_user_email = receive_user_data_from_body.email;\r\n    const take_user_password = receive_user_data_from_body.password;\r\n\r\n     if (!take_user_email) {\r\n        return response.status(400).json({ status: 400, message: `Hey !! Insert Email` });\r\n      } \r\n\r\n      else if (!take_user_password) {\r\n        return response.status(400).json({ status: 400, message: `Hey !! Insert password` });\r\n      }\r\n\r\n      const check_to_signin_user = users_DB.filter(({email, password})=> email === take_user_email && password === take_user_password);\r\n    \r\n  \r\n      if (check_to_signin_user.length != 0) {\r\n        \r\n        for (var index=0; index < check_to_signin_user.length; index++ )\r\n        {\r\n\r\n          dotenv.config();\r\n          const choose_id_as_detail_to_store = check_to_signin_user[index].id;\r\n          const choose_email_as_detail_to_store = check_to_signin_user[index].email;\r\n          const choose_category_as_detail_to_store = check_to_signin_user[index].category;\r\n          const choose_firstName_as_detail_to_store = check_to_signin_user[index].firstName;\r\n          const giventoken = jwt.sign({choose_id_as_detail_to_store,choose_category_as_detail_to_store,choose_firstName_as_detail_to_store,choose_email_as_detail_to_store},process.env.SECRET_KEY,{expiresIn:'24000000h'});\r\n          \r\n          const user_welcome_data_to_display=\r\n          {\r\n            token:giventoken,   \r\n          }\r\n\r\n          response.status(200).json({\r\n            status: 200, \r\n            message: `Hey ${check_to_signin_user[index].category} ${check_to_signin_user[index].firstName}!! You are logged in successfully `, \r\n            data:user_welcome_data_to_display\r\n          });\r\n        }\r\n        \r\n        }\r\n\r\n      else{\r\n        return response.status(400).json({status: 400, message:\"Hey !! Wrong account details check your email  and  password \"});\r\n\r\n      }\r\n    \r\n    \r\n  \r\n      \r\n        \r\n  },\r\n\r\n  view_all_users: (request, response) => {\r\n    // if (users_DB.length === 0) { return response.status(200).send({ status: 200, message:' Hey !! there is no users found in DataBase ' }); }\r\n    return response.status(200).send({ status: 200, message: ' Hey !! Hope you are retrieving all users ', data: users_DB });\r\n  },\r\n\r\n  View_all_mentee: (request, response) => {\r\n    const sort_mentee = users_DB.filter(({ category }) => category === 'mentee' );\r\n\r\n  if (sort_mentee) {\r\nconst data_to_display=[];\r\n    for (var x=0; x<sort_mentee.length; x++ ){\r\n    \r\n        data_to_display.push( {\r\n          id: sort_mentee[x].id,\r\n          category: sort_mentee[x].category,\r\n          firstName:sort_mentee[x].firstName,\r\n          lastName:sort_mentee[x].lastName,\r\n          email: sort_mentee[x].email, \r\n          address:sort_mentee[x].address,\r\n          bio: sort_mentee[x].bio, \r\n          occupation: sort_mentee[x].occupation,\r\n          expertise: sort_mentee[x].expertise,\r\n          account_created : sort_mentee[x].account_created,\r\n          account_edited : sort_mentee[x].account_edited,\r\n        });         \r\n    }\r\n    return response.status(200).send({status: 200, message:\"Hey !! Hope you are retrieving all mentee ***\", data:data_to_display});\r\n  }\r\n},\r\n\r\nView_mentee: (request,response)=>{ \r\n  const receive_token_from_header = request.headers.authorization;\r\n  const decoded_token_in_the_way_to_obtain_user_details = jwt.verify(receive_token_from_header, process.env.SECRET_KEY);\r\n  const find_mentee_by_id = users_DB.find((mentee) => mentee.id === parseInt(request.params.menteeId, 10));\r\n  const menteeid = parseInt(request.params.menteeId, 10);\r\n\r\n    if (!find_mentee_by_id) {\r\n      return response.status(404).send({ status: 404, message: `Hey ${decoded_token_in_the_way_to_obtain_user_details.choose_category_as_detail_to_store} ${decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! This mentee with id ${menteeid} does not exist` });\r\n    \r\n    }\r\n  \r\n\r\n  else {\r\n    const keyword = `mentee`;\r\n    const sort_mentee = users_DB.filter(({category, id})=> category === keyword && id === menteeid);\r\n    \r\n    if (sort_mentee.length != 0) {\r\n      const x = 0;\r\n      const data_to_display = {\r\n            id: sort_mentee[x].id,\r\n            category: sort_mentee[x].category,\r\n            firstName:sort_mentee[x].firstName,\r\n            lastName:sort_mentee[x].lastName,\r\n            email: sort_mentee[x].email, \r\n            address:sort_mentee[x].address,\r\n            bio: sort_mentee[x].bio, \r\n            occupation: sort_mentee[x].occupation,\r\n            expertise: sort_mentee[x].expertise,\r\n            account_created : sort_mentee[x].account_created,\r\n            account_edited : sort_mentee[x].account_edited,}\r\n        \r\n      return response.status(200).send({status: 200, message:`Hey ${decoded_token_in_the_way_to_obtain_user_details.choose_category_as_detail_to_store} ${ decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! Hope you are retrieving ${sort_mentee[x].category} ${sort_mentee[x].firstName} *** `, data:data_to_display});\r\n  \r\n    }\r\n    else{\r\n      return response.status(404).send({status: 404, message:` Hey ${decoded_token_in_the_way_to_obtain_user_details.choose_category_as_detail_to_store} ${decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! This ${keyword} with id ${menteeid} does not found in DataBase`});\r\n    }\r\n  }\r\n},\r\n\r\n  View_all_mentor: (request, response) => {\r\n    const sort_mentors = users_DB.filter(({ category }) => category === 'mentor');\r\n\r\n    if (sort_mentors) {\r\nconst data_to_display=[];\r\n    for (var x=0; x<sort_mentors.length; x++ ){\r\n    \r\n        data_to_display.push( {\r\n          id: sort_mentors[x].id,\r\n          category: sort_mentors[x].category,\r\n          firstName:sort_mentors[x].firstName,\r\n          lastName:sort_mentors[x].lastName,\r\n          email: sort_mentors[x].email, \r\n          address:sort_mentors[x].address,\r\n          bio: sort_mentors[x].bio, \r\n          occupation: sort_mentors[x].occupation,\r\n          expertise: sort_mentors[x].expertise,\r\n          account_created : sort_mentors[x].account_created,\r\n          account_edited : sort_mentors[x].account_edited,\r\n        });         \r\n    }\r\n    return response.status(200).send({status: 200, message:\"Hey !! Hope you are retrieving all mentors ***\", data:data_to_display});\r\n    }\r\n  },\r\n\r\nView_mentor: (request,response)=>{ \r\n\r\n  const receive_token_from_header = request.headers.authorization;\r\n  const decoded_token_in_the_way_to_obtain_user_details = jwt.verify(receive_token_from_header, process.env.SECRET_KEY);\r\n  const find_mentor_by_id = users_DB.find((mentor) => mentor.id === parseInt(request.params.mentorId, 10));\r\n  const mentorid = parseInt(request.params.mentorId, 10);\r\n\r\n    if (!find_mentor_by_id) {\r\n      return response.status(404).send({ status: 404, message: `Hey ${decoded_token_in_the_way_to_obtain_user_details.choose_category_as_detail_to_store} ${decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! This mentor with id ${mentorid} does not exist` });\r\n    \r\n    }\r\n  \r\n\r\n  else {\r\n    const keyword = `mentor`;\r\n    const sort_mentors = users_DB.filter(({category, id})=> category === keyword && id === mentorid);\r\n    \r\n    if (sort_mentors.length != 0) {\r\n      const x = 0;\r\n      const data_to_display = {\r\n            id: sort_mentors[x].id,\r\n            category: sort_mentors[x].category,\r\n            firstName:sort_mentors[x].firstName,\r\n            lastName:sort_mentors[x].lastName,\r\n            email: sort_mentors[x].email, \r\n            address:sort_mentors[x].address,\r\n            bio: sort_mentors[x].bio, \r\n            occupation: sort_mentors[x].occupation,\r\n            expertise: sort_mentors[x].expertise,\r\n            account_created : sort_mentors[x].account_created,\r\n            account_edited : sort_mentors[x].account_edited,}\r\n        \r\n      return response.status(200).send({status: 200, message:`Hey ${decoded_token_in_the_way_to_obtain_user_details.choose_category_as_detail_to_store} ${ decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! Hope you are retrieving ${sort_mentors[x].category} ${sort_mentors[x].firstName} *** `, data:data_to_display});\r\n  \r\n    }\r\n    else{\r\n      return response.status(400).send({status: 400, message:` Hey ${decoded_token_in_the_way_to_obtain_user_details.choose_category_as_detail_to_store} ${decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! This ${keyword} with id ${mentorid} does not found in DataBase`});\r\n    }\r\n  }\r\n},\r\n\r\nView_all_admin: (request,response)=>{\r\n  const sort_admin = users_DB.filter(({category})=> category === \"admin\");\r\n\r\n  if (sort_admin) {\r\nconst data_to_display=[];\r\n    for (var x=0; x<sort_admin.length; x++ ){\r\n    \r\n        data_to_display.push( {\r\n          id: sort_admin[x].id,\r\n          category: sort_admin[x].category,\r\n          firstName:sort_admin[x].firstName,\r\n          lastName:sort_admin[x].lastName,\r\n          email: sort_admin[x].email, \r\n          address:sort_admin[x].address,\r\n          bio: sort_admin[x].bio, \r\n          occupation: sort_admin[x].occupation,\r\n          expertise: sort_admin[x].expertise,\r\n          account_created : sort_admin[x].account_created,\r\n          account_edited : sort_admin[x].account_edited,\r\n        });         \r\n    }\r\n    return response.status(200).send({status: 200, message:\"Hey !! Hope you are retrieving all admin ***\", data:data_to_display});\r\n  }\r\n},\r\n\r\nView_admin: (request,response)=>{ \r\n\r\n  const receive_token_from_header = request.headers.authorization;\r\n  const decoded_token_in_the_way_to_obtain_user_details = jwt.verify(receive_token_from_header, process.env.SECRET_KEY);\r\n  const find_admin_by_id = users_DB.find((admin) => admin.id === parseInt(request.params.adminId, 10));\r\n  const adminid = parseInt(request.params.adminId, 10);\r\n\r\n    if (!find_admin_by_id) {\r\n      return response.status(404).send({ status: 404, message: `Hey ${decoded_token_in_the_way_to_obtain_user_details.choose_category_as_detail_to_store} ${decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! This admin with id ${adminid} does not exist` });\r\n    \r\n    }\r\n  \r\n\r\n  else {\r\n    const keyword = `admin`;\r\n    const sort_admin = users_DB.filter(({category, id})=> category === keyword && id === adminid);\r\n    \r\n    if (sort_admin.length != 0) {\r\n      const x = 0;\r\n      const data_to_display = {\r\n        id: sort_admin[x].id, \r\n        category: sort_admin[x].category,\r\n        firstName:sort_admin[x].firstName, \r\n        lastName:sort_admin[x].lastName, \r\n        email: sort_admin[x].email,\r\n        address:sort_admin[x].address,\r\n        bio: sort_admin[x].bio, \r\n        occupation: sort_admin[x].occupation,\r\n        expertise: sort_admin[x].expertise,\r\n        account_created : sort_admin[x].account_created,\r\n        account_edited : sort_admin[x].account_edited,}\r\n        \r\n      return response.status(200).send({status: 200, message:`Hey ${decoded_token_in_the_way_to_obtain_user_details.choose_category_as_detail_to_store} ${ decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! Hope you are retrieving ${sort_admin[x].category} ${sort_admin[x].firstName} *** `, data:data_to_display});\r\n  \r\n    }\r\n    else{\r\n      return response.status(400).send({status: 400, message:` Hey ${decoded_token_in_the_way_to_obtain_user_details.choose_category_as_detail_to_store} ${decoded_token_in_the_way_to_obtain_user_details.choose_firstName_as_detail_to_store} !! This ${keyword} with id ${adminid} does not found in DataBase`});\r\n    }\r\n  }\r\n},\r\n\r\n}\r\n    \r\n  module.exports = userController;"]}