{"version":3,"sources":["checkAdmin.js"],"names":["dotenv","config","verfy_admin","request","response","next","receive_token_from_header","headers","authorization","decoded_token_in_the_way_to_obtain_user_details","jwt","verify","process","env","SECRET_KEY","category","status","json","message","firstname","error"],"mappings":";;;;;;;;;AAAA;;AACA;;AACAA,mBAAOC,MAAP;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD,EAAUC,QAAV,EAAoBC,IAApB,EAA4B;AAE5C,MACA;AACE,QAAMC,yBAAyB,GAAGH,OAAO,CAACI,OAAR,CAAgBC,aAAlD;;AACA,QAAMC,+CAA+C,GAAGC,yBAAIC,MAAJ,CAAWL,yBAAX,EAAsCM,OAAO,CAACC,GAAR,CAAYC,UAAlD,CAAxD;;AACA,QAAIL,+CAA+C,CAACM,QAAhD,KAA6D,OAAjE,EACA;AAAEV,MAAAA,IAAI;AAAK,KADX,MAGA;AAAE,aAAOD,QAAQ,CAACY,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAACD,QAAAA,MAAM,EAAG,GAAV;AAAeE,QAAAA,OAAO,gBAAUT,+CAA+C,CAACU,SAA1D;AAAtB,OAA1B,CAAP;AAA6K;AAChL,GARD,CASA,OAAOC,KAAP,EACA;AACI,WAAOhB,QAAQ,CAACY,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAAED,MAAAA,MAAM,EAAG,GAAX;AAAiBE,MAAAA,OAAO;AAAxB,KAA1B,CAAP;AAA8G;AACjH,CAdL;;eAgBoBhB,W","sourceRoot":"C:\\Users\\Positivo_Computer\\Desktop\\broadcast-andela-cycle13\\server\\v1\\api\\middlewares","sourcesContent":["import jwt from 'jsonwebtoken';\r\nimport dotenv from 'dotenv';\r\ndotenv.config();\r\nconst verfy_admin = (request, response, next)=> {\r\n  \r\n    try\r\n    {\r\n      const receive_token_from_header = request.headers.authorization;\r\n      const decoded_token_in_the_way_to_obtain_user_details = jwt.verify(receive_token_from_header, process.env.SECRET_KEY);\r\n      if (decoded_token_in_the_way_to_obtain_user_details.category === \"admin\") \r\n      { next(); }\r\n      else\r\n      { return response.status(401).json({status : 401, message : ` Hy ${decoded_token_in_the_way_to_obtain_user_details.firstname} !! This action is available for Admins only`}); }\r\n    }\r\n    catch (error)\r\n    {  \r\n        return response.status(401).json({ status : 401,  message :  ` Hy !! Access denied, please provide Token `}) }\r\n    }\r\n   \r\n    export default  verfy_admin;"]}