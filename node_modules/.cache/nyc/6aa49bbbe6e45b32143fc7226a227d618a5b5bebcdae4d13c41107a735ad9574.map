{"version":3,"sources":["helper.js"],"names":["Help","Name","empty_name","Mark","empty_mark","Level","empty_level","Email","empty_Email","get_inserted_user_Name","give_format_inserted_user_Name","toString","trim","toLowerCase","weak_Name","length","search","sample","get_inserted_user_email","give_format_the_email_user_inserted_before_that_email_goes_in_the_database_to_save","mail","real_email","finalCheck","test"],"mappings":";;;;;;;;;;;;;IAAMA,I;;;;;;;;;2CACmBC,I,EAAM;AAC3B,aAAO,KAAKC,UAAL,GAAkB,CAACD,IAA1B;AACD;;;2CAEsBE,I,EAAM;AAC3B,aAAO,KAAKC,UAAL,GAAkB,CAACD,IAA1B;AACD;;;4CAEuBE,K,EAAO;AAC7B,aAAO,KAAKC,WAAL,GAAmB,CAACD,KAA3B;AACD;;;4CAEuBE,K,EAAO;AAC7B,aAAO,KAAKC,WAAL,GAAmB,CAACD,KAA3B;AACD;;;sCAEiBN,I,EAAM;AACtB,UAAMQ,sBAAsB,GAAGR,IAA/B;AACA,UAAMS,8BAA8B,GAAGD,sBAAsB,CAACE,QAAvB,GAAkCC,IAAlC,GAAyCC,WAAzC,EAAvC;AACA,aAAO,KAAKC,SAAL,GAAkBJ,8BAA8B,CAACK,MAA/B,GAAwC,CAAjE;AACD;;;kDAE6Bd,I,EAAM;AAClC,UAAMQ,sBAAsB,GAAGR,IAA/B;AACA,UAAMS,8BAA8B,GAAGD,sBAAsB,CAACE,QAAvB,GAAkCC,IAAlC,GAAyCC,WAAzC,EAAvC;AACA,aAAO,KAAKC,SAAL,GAAkBJ,8BAA8B,CAACM,MAA/B,CAAsC,OAAtC,MAAmD,CAAC,CAA7E;AACD;;;qDAEgCf,I,EAAM;AACrC,UAAMQ,sBAAsB,GAAGR,IAA/B;AACA,UAAMS,8BAA8B,GAAGD,sBAAsB,CAACE,QAAvB,GAAkCC,IAAlC,GAAyCC,WAAzC,EAAvC;AACA,aAAO,KAAKC,SAAL,GAAkBJ,8BAA8B,CAACM,MAA/B,CAAsC,yCAAtC,MAAqF,CAAC,CAA/G;AACD;;;4CAEuBf,I,EAAM;AAC5B,aAAO,KAAKgB,MAAL,GAAchB,IAAI,CAACU,QAAL,GAAgBC,IAAhB,GAAuBC,WAAvB,OAAyC,YAA9D;AACD;;;gCAEWN,K,EAAO;AACjB,UAAMW,uBAAuB,GAAGX,KAAhC;AACA,UAAMY,kFAAkF,GAAGD,uBAAuB,CAACP,QAAxB,GAAmCC,IAAnC,GAA0CC,WAA1C,EAA3F;AACA,UAAMO,IAAI,GAAGD,kFAAb;AACA,UAAME,UAAU,GAAG,6EAAnB;AACA,aAAO,KAAKC,UAAL,GAAmB,CAACD,UAAU,CAACE,IAAX,CAAgBH,IAAhB,CAA3B;AACD;;;;;eAGY,IAAIpB,IAAJ,E","sourceRoot":"C:\\Users\\Positivo_Computer\\Desktop\\broadcast-andela-cycle13\\server\\v1\\api\\helpers","sourcesContent":["class Help {\n  check_name_if_is_empty(Name) {\n    return this.empty_name = !Name;\n  }\n\n  check_mark_if_is_empty(Mark) {\n    return this.empty_mark = !Mark;\n  }\n\n  check_Level_if_is_empty(Level) {\n    return this.empty_level = !Level;\n  }\n\n  check_Email_if_is_empty(Email) {\n    return this.empty_Email = !Email;\n  }\n\n  check_length_name(Name) {\n    const get_inserted_user_Name = Name;\n    const give_format_inserted_user_Name = get_inserted_user_Name.toString().trim().toLowerCase();\n    return this.weak_Name = (give_format_inserted_user_Name.length < 6);\n  }\n\n  check_if_name_contains_number(Name) {\n    const get_inserted_user_Name = Name;\n    const give_format_inserted_user_Name = get_inserted_user_Name.toString().trim().toLowerCase();\n    return this.weak_Name = (give_format_inserted_user_Name.search(/[0-9]/) === -1);\n  }\n\n  check_if_name_contains_character(Name) {\n    const get_inserted_user_Name = Name;\n    const give_format_inserted_user_Name = get_inserted_user_Name.toString().trim().toLowerCase();\n    return this.weak_Name = (give_format_inserted_user_Name.search(/[!\\@\\#\\$\\%\\&\\*\\~\\`\\:\\\"\"\\''\\'\\\"\\?\\/\\,\\.]/) === -1);\n  }\n\n  check_if_the_use_sample(Name) {\n    return this.sample = Name.toString().trim().toLowerCase() === \"qwerty@123\";\n  }\n\n  check_email(Email) {\n    const get_inserted_user_email = Email;\n    const give_format_the_email_user_inserted_before_that_email_goes_in_the_database_to_save = get_inserted_user_email.toString().trim().toLowerCase();\n    const mail = give_format_the_email_user_inserted_before_that_email_goes_in_the_database_to_save;\n    const real_email = /^(([a-zA-Z0-9\\.-_]{2,6})+)@(([a-zA-Z0-9]{2,6})+).([a-z]{2,6})(.[a-z]{2,6})$/;\n    return this.finalCheck = (!real_email.test(mail));\n  }\n}\n\nexport default new Help();\n"]}